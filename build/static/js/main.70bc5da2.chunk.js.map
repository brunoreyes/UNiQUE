{"version":3,"sources":["redux/reducers/errorsReducer.js","redux/reducers/loginModeReducer.js","redux/reducers/userReducer.js","redux/reducers/allSectionsReducer.js","redux/reducers/sectionReducer.js","redux/reducers/allRealmsReducer.js","redux/reducers/newQuestionReducer.js","redux/reducers/realmReducer.js","redux/reducers/chosenSectionsReducer.js","redux/reducers/progressReducer.js","redux/reducers/responsesReducer.js","redux/reducers/statisticReducer.js","redux/reducers/index.js","redux/sagas/loginSaga.js","redux/sagas/registrationSaga.js","redux/sagas/userSaga.js","redux/sagas/sectionSaga.js","redux/sagas/realmSaga.js","redux/sagas/responseSaga.js","redux/sagas/progressSaga.js","redux/sagas/statisticSaga.js","redux/sagas/index.js","components/LogOutButton/LogOutButton.js","themes/adminTheme.js","components/Nav/Nav.js","themes/loginRegisterTheme.js","components/LoginPage/LoginPage.js","components/RegisterPage/RegisterPage.js","components/ProtectedRoute/ProtectedRoute.js","components/AdminRoute/AdminRoute.js","components/ScrollToTop/ScrollToTop.js","components/Admin/pages/StatisticsPage/StatisticsPage.js","themes/homeTheme.js","components/RealmTile/RealmTile.js","components/HomeMobile/HomeMobile.js","components/Admin/pages/ViewSectionsPage/ViewSectionsPage.js","components/Admin/components/SectionQuestions/SectionQuestions.js","components/Admin/pages/AddNewSectionPage/AddNewSectionPage.js","components/Admin/components/PreviewSection/PreviewSection.js","components/Admin/components/EditSection/EditSection.js","components/Admin/pages/PreviewSectionPage/PreviewSectionPage.js","components/Admin/components/PreviewRealm/PreviewRealm.js","components/Admin/pages/PreviewRealmPage/PreviewRealmPage.js","components/Admin/pages/ViewRealmsPage/ViewRealmsPage.js","components/Admin/components/RealmQuestions/RealmQuestions.js","components/Admin/pages/AddNewRealmPage/AddNewRealmPage.js","components/Admin/components/SectionToChoose/SectionToChoose.js","components/Admin/components/ChosenSection/ChosenSection.js","components/Admin/pages/AddSectionsToNewRealmPage/AddSectionsToNewRealmPage.js","themes/realmHomeTheme.js","components/Question/Question.js","components/Section/Section.js","components/RealmFormIntro/RealmFormIntro.js","components/RealmQuestion/RealmQuestion.js","components/RealmForm/RealmForm.js","components/RealmFormFinished/RealmFormFinished.js","components/RealmFeedback/RealmFeedback.js","components/RealmHome/RealmHome.js","components/App/App.js","index.js"],"names":["combineReducers","loginMessage","state","action","type","registrationMessage","loginMode","userReducer","payload","allSectionsReducer","newState","i","length","push","section","allRealmsReducer","newQuestions","undefined","question_index","question","realm","chosenSectionsReducer","progress","responses","statistic","rootReducer","errors","user","allSections","allRealms","chosenSections","statistics","loginUser","logoutUser","loginSaga","put","config","headers","withCredentials","axios","post","console","log","response","status","takeLatest","registerUser","registrationSaga","fetchUser","userSaga","get","data","submitSection","getAllSections","getSection","deleteSection","appendQuestion","editQuestions","changeSectionSaga","sectionSaga","sectionId","delete","getAllRealms","getRealm","submitNewRealm","removeRealm","realmSaga","realmId","submitResponse","submitFeedback","responseSaga","getProgress","createProgress","updateProgress","completeProgress","updateFormProgress","progressSaga","getCurriculum","getDemographics","getFeedback","rootSaga","all","statisticSaga","connect","props","className","onClick","dispatch","to","styles","theme","header","width","margin","font","color","headerMore","headerView","headerLess","headerLesser","headerLeast","paddingR","padding","paddingLR","formControl","formContainer","position","formContainerQuestion","formContainerVideo","marginTop","grayPreview","preview","previewTitle","clickedPreview","sectionVideoContainer","marginBottom","sectionVideo","height","top","left","right","sectionImageContainer","sectionImage","justifyContent","overflow","paddingBottom","inputControl","inputControlIconSelector","inputControlQuestion","inputControlLink","inputControlTextContent","inputControlContentDescription","previewDescription","helperText","input","cssLabel","cssOutlinedSelect","borderColor","notchedOutline","borderWidth","menu","adminButtonContainer","adminButton","backgroundColor","adminButtonDialog","adminButtonEdit","adminButtonPreviewAgain","adminButtonAdd","adminButtonAddMarginLess","adminButtonView","adminButtonPreview","squareButtons","downloadButton","dialogContent","downloadButtonExtended","downloadButtonLink","statisticsHeader","downloadIcon","welcomeMessage","paper","overflowX","paperView","paperViewRealm","table","minWidth","tableHeader","tableCell","tableCellType","checkBoxIcon","addSectionResourceIcon","removeSectionResourceIcon","addSectionViewIcon","marginRight","editSectionPreviewIcon","previewSectionPreviewIcon","viewSectionDeleteIcon","viewSectionIcon","noDecoration","root","container","display","svg","polygon","fill","palette","common","white","stroke","divider","strokeWidth","withStyles","admin","alt","src","allContainer","videoContainer","videoContainerMobile","videoContainerRegister","videoContainerRegisterMobile","infinityControl","colorLogo","filter","infinitytext","leftSideFlex","flexGrow","leftSide","rightSide","formContainerMobile","brandNameControl","signUpControl","requiredControl","formControlRegistrationFullWidth","formControlRegistrationFullWidthMobile","formControlRegistration","formControlRegistrationSelector","formControlRegistrationSelectorMobile","submitButtonContainer","submitButton","opacity","border","submitButtonRegister","register","categorySelector","categorySelectorMobile","icon","outlined","invisibleText","LoginPage","username","password","login","event","preventDefault","handleInputChangeFor","propertyName","setState","target","value","classes","this","Grid","id","spacing","window","screen","Hidden","smDown","item","md","lg","xs","sm","role","onSubmit","autoComplete","FormControl","TextField","label","variant","onChange","InputLabelProps","floatingLabelFocusStyle","InputProps","cssOutlinedInput","FormHelperTextProps","Button","disableElevation","name","Component","CategorySelectorProps","PaperProps","style","maxHeight","CategorySelectorHeight","RegisterPage","confirm_password","first_name","last_name","email","age","ethnicity","gender","income","education_level","includes","mdDown","required","InputLabel","Select","MenuProps","inputProps","MenuItem","inputLabelProps","reg_code","component","ComponentToShow","ComponentToProtect","otherProps","ScrollToTop","prevProps","location","pathname","scrollTo","React","withRouter","StatisticsPage","openCurriculum","openDemographics","openFeedback","handleSectionsClick","history","handleRealmsClick","handleClickOpenCurriculum","handleCloseCurriculum","handleClickOpenDemographics","handleCloseDemographics","handleClickOpenFeedback","handleCloseFeedback","date","Date","toDateString","alignItems","justify","Dialog","open","onClose","DialogTitle","DialogActions","reduxState","filename","autoFocus","exploreInvitation","GridListRoot","gridList","gridListTile","buttonContainer","buttonPaper","elevation","userName","button","realmName","RealmTile","iconIndex","realm_name","HomeMobile","goRealm","realms","direction","GridList","cols","cellHeight","map","index","GridListTile","key","ViewSectionsPage","componentDidMount","handleClick","handleNewSectionClick","handleDeleteSectionClick","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","sections","scope","title","type_name","IconButton","size","aria-label","fontSize","SectionQuestions","handleQuestionChange","newValue","maxLength","local","changeHandler","AddNewSectionPage","description","imageLink","videoLink","questions","textContent","qmap","appendNewQuestion","toggleResourcePreview","select","option","frameborder","replace","split","multiline","rows","PreviewSectionPage","match","params","sectionTitle","video_link","text_content","Typography","sectionDescription","image_link","sectionCoverContainer","realmCover","q","content","EditSection","changeSection","changedQuestions","handleQuestionChangeFor","qIndex","defaultValue","edit","toggleEdit","PreviewSection","PreviewRealmPage","cover_photo","PreviewRealm","ViewRealmsPage","handleDeleteClick","handleNewRealmClick","RealmQuestions","AddNewRealmPage","photoLink","questionInputs","populateNewRealmInputs","storeRealm","goNext","toggleCoverPreview","RealmQuestion","SectionToChoose","addchosen","ChosenSection","removechosen","AddSectionsToNewRealmPage","submitRealmWithSections","forwardviewRealm","backtoAddRealm","realmCoverContainer","realmTitle","realmDescription","realmTableofContent","realmTableofContentTitle","realmTableofContentSectionContainer","borderBottom","realmTableofContentSection","realmTableofContentSectionIcon","realmButton","realmButtonContainer","formButtonContainer","inputControlTextArea","formDescriptionContainer","borderTop","paddingTop","formDescriptionContainerThankYou","formDescription","boldTOC","estimatedTimeOfCompletion","formContainerSection","QandAContainer","QandAContainerSection","formQuestion","sectionOrder","inputControlSection","sectionQuestion","sectionQuestionRealmFeedback","sectionRadio","radioContainer","sectionRadioIcon","borderRadius","boxShadow","backgroundImage","outline","outlineOffset","background","checkedIcon","ratingIcon","sectionRadioButtonLabel","bottomNav","bottom","Question","Section","saveAndContinue","section_order","next_section","section_id","parseInt","saveAndReturn","RealmFormIntro","goBack","start","butts","answer","RealmForm","complete","RealmFormFinished","continue","CssTextField","RealmFeedback","feedbackScore","feedback","handleRadioChange","handleFeedbackChange","RadioGroup","row","FormControlLabel","labelPlacement","control","Radio","clsx","RealmHome","goContinue","realm_id","started","gutterBottom","App","exact","from","path","AddSectionsToNewRealm","render","sagaMiddleware","createSagaMiddleware","middlewareList","store","createStore","applyMiddleware","run","ReactDOM","document","getElementById"],"mappings":"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tD,MAAM,MAAhB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAM,MAAhB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAM,MAAhB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAM,MAAhB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAM,MAAhB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAM,MAAhB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAM,MAAhB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAM,MAAhB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAM,MAAhB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAM,MAAhB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAM,MAAhB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAM,MAAhB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAM,MAAhB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAM,MAAhB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAM,MAAhB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAM,MAAhB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAM,MAAhB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAM,MAAhB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAM,MAAhB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAM,MAAhB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAM,MAAhB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAM,MAAhB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAM,MAAhB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAM,MAAhB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAM,MAAhB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAM,MAAhB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAM,MAAhB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAM,MAAhB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAM,MAAhB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAM,MAA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AAO,IAAjB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAO,IAAjB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAO,IAAjB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAO,IAAjB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAO,IAAjB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAO,IAAjB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAO,IAAjB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAO,IAAjB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAO,IAAjB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAO,IAAjB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAO,IAAjB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAO,IAAjB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAO,IAAjB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAO,IAAjB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAO,IAAjB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAO,IAAjB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAO,IAAjB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAO,IAAjB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAO,IAAjB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAO,IAAjB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAO,IAAjB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAO,IAAjB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAO,IAAjB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAO,IAAjB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAO,IAAjB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAO,IAAjB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAO,IAAjB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAO,IAAjB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAO,IAAjB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAO,IAAjB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAO,IAAjB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAO,IAAjB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAO,IAAjB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAO,IAAjB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAO,IAAjB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAO,IAAjB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAO,IAAjB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAO,IAAjB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAO,IAAjB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAO,IAAjB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAO,IAAjB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAO,IAAjB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAO,IAAjB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAO,IAAjB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAO,IAAjB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAO,IAAjB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAO,IAAjB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAO,IAAjB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAO,IAAjB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAO,IAAjB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAO,IAAjB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAO,IAAjB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAO,IAAjB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAO,IAAjB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAO,IAAjB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAO,IAAjB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAO,IAAjB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAO,IAAjB,MACA,kBAACsD,GAAA,EAAD,CAAUtD,MAAO,IAAjB,MACA,kBAACsD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","file":"static/js/main.70bc5da2.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\n\n// loginMessage holds the string that will display\n// on the login screen if there's an error\nconst loginMessage = (state = '', action) => {\n  switch (action.type) {\n    case 'CLEAR_LOGIN_ERROR':\n      return '';\n    case 'LOGIN_INPUT_ERROR':\n      return 'Enter your username and password!';\n    case 'LOGIN_FAILED':\n      return 'Oops! The username and password didn\\'t match. Try again!';\n    case 'LOGIN_FAILED_NO_CODE':\n      return 'Oops! Something went wrong! Is the server running?';\n    default:\n      return state;\n  }\n};\n\n// registrationMessage holds the string that will display\n// on the registration screen if there's an error\nconst registrationMessage = (state = '', action) => {\n  switch (action.type) {\n    case 'CLEAR_REGISTRATION_ERROR':\n      return '';\n    case 'REGISTRATION_INPUT_ERROR':\n      return 'Choose a username and password!';\n    case 'REGISTRATION_FAILED':\n      return 'Oops! That didn\\'t work. The username might already be taken. Try again!';\n    default:\n      return state;\n  }\n};\n\n// make one object that has keys loginMessage, registrationMessage\n// these will be on the redux state at:\n// state.errors.loginMessage and state.errors.registrationMessage\nexport default combineReducers({\n  loginMessage,\n  registrationMessage,\n});\n","// const loginMode = (state = 'register', action) => {\nconst loginMode = (state = 'login', action) => {\n  switch (action.type) {\n    case 'SET_TO_LOGIN_MODE':\n      return 'login';\n    case 'SET_TO_REGISTER_MODE':\n      return 'register';\n    default:\n      return state;\n  }\n};\n\n// loginMode will be on the redux state at:\n// state.loginMode\nexport default loginMode;\n","const userReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'SET_USER':\n      return action.payload;\n    case 'UNSET_USER':\n      return {};\n    default:\n      return state;\n  }\n};\n\n// user will be on the redux state at:\n// state.user\nexport default userReducer;\n","const allSectionsReducer = (state = [], action) => {\n    switch (action.type) {\n        case \"SET_ALL_SECTIONS\":\n            return action.payload;\n        case \"ADD_SECTION_ALLSECTIONS\":\n            // append the new Section to the state\n            return [...state, action.payload];\n        case \"REMOVE_SECTION_ALLSECTIONS\":\n            // Remove the section that is the same as the action.payload\n            let newState = []\n                for (let i = 0; i < state.length; i++) {\n                if (state[i] !== action.payload) {\n                newState.push(state[i])\n                    }\n                }\n            return newState;\n        default:\n            return state;\n    }\n};\n\nexport default allSectionsReducer;\n","const section = (state = {}, action) => {\n  switch (action.type) {\n    case 'SET_SECTION':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\n// user will be on the redux state at:\n// state.section\nexport default section;\n","const allRealmsReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"SET_ALL_REALMS\":\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default allRealmsReducer;\n","const newQuestions = (state = [], action) => {\n  switch (action.type) {\n    case \"UPDATE_QUESTIONS\":\n      let newState = [];\n\n      // If this is a new question\n      if ( state[action.payload.question_index] === undefined ) {\n        // Add elements to the state array until there is one for the new question\n        while (state.length < action.payload.question_index) {\n          state = [ ...state, ''];\n        }\n      }\n      for (let i; i < state.length; i++ ) {\n        // Replace whatever element is at that index with the new value\n        if ( i === action.payload.question_index ) {\n          newState[i] = action.payload.question;\n        } else {\n          newState[i] = state[i];\n        }\n      }\n      return newState;\n    default:\n      return state;\n  }\n};\n\nexport default newQuestions;\n","const realm = (state = {}, action) => {\n    switch (action.type) {\n      case 'SET_REALM':\n        return action.payload;\n      default:\n        return state;\n    }\n  };\n\n  // user will be on the redux state at:\n  // state.realm\n  export default realm;\n","const chosenSectionsReducer = (state = [], action) => {\n    switch (action.type) {\n        case \"ADD_CHOSEN\":\n            // append the new Section to the state\n            return [...state, action.payload];\n        case \"REMOVE_CHOSEN\":\n            // Remove the section that is the same as the action.payload\n            let newState = []\n                for (let i = 0; i < state.length; i++) {\n                if (state[i] !== action.payload) {\n                newState.push(state[i])\n                    }\n                }\n            return newState;\n        default:\n            return state;\n    }\n};\n\nexport default chosenSectionsReducer;","const progress = (state = {}, action) => {\n    switch (action.type) {\n      case 'SET_PROGRESS':\n        return action.payload;\n      default:\n        return state;\n    }\n  };\n\n  // user will be on the redux state at:\n  // state.progress\n  export default progress;\n","const responses = (state = [], action) => {\n  switch (action.type) {\n    case \"UPDATE_RESPONSES\":\n      let newState = [];\n\n      // If this is a new question\n      if ( state[action.payload.question_index] === undefined ) {\n        // Add elements to the state array until there is one for the new question\n        while (state.length < action.payload.question_index) {\n          state = [ ...state, ''];\n        }\n        newState = state;\n      }\n      for (let i; i < state.length; i++ ) {\n        // Replace whatever element is at that index with the new value\n        if ( i === action.payload.question_index ) {\n          newState[i] = action.payload.question;\n        } else {\n          newState[i] = state[i];\n        }\n      }\n      return newState;\n    default:\n      return state;\n  }\n};\n\nexport default responses;\n","const statistic = (state = {}, action) => {\n  switch (action.type) {\n    case 'SET_STATISTICS':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default statistic;\n","import { combineReducers } from 'redux';\nimport errors from './errorsReducer';\nimport loginMode from './loginModeReducer';\nimport user from './userReducer';\nimport allSections from './allSectionsReducer';\nimport section from './sectionReducer';\nimport allRealms from './allRealmsReducer';\nimport newQuestions from './newQuestionReducer';\nimport realm from './realmReducer';\nimport chosenSections from './chosenSectionsReducer';\nimport progress from './progressReducer';\nimport responses from './responsesReducer';\nimport statistics from './statisticReducer';\n\n// rootReducer is the primary reducer for our entire project\n// It bundles up all of the other reducers so our project can use them.\n// This is imported in index.js as rootSaga\n\n// Lets make a bigger object for our store, with the objects from our reducers.\n// This is what we get when we use 'state' inside of 'mapStateToProps'\nconst rootReducer = combineReducers({\n  errors, // contains registrationMessage and loginMessage\n  loginMode, // will have a value of 'login' or 'registration' to control which screen is shown\n  user, // will have an id and username if someone is logged in\n  allSections, //will contain info of all sections\n  allRealms, //will contain info of all realms\n  section, //will contain the info about what section the user is currently in.\n  newQuestions, //will contain info for new questions before they are POSTed\n  realm, //holds realm before POSTed\n  chosenSections, //holds chosen sections for a given realm before they are POSTed\n  progress, //holds the users progress in their current realm\n  responses, // holds users saved responses\n  statistics, // holds site data\n});\n\nexport default rootReducer;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// worker Saga: will be fired on \"LOGIN\" actions\nfunction* loginUser(action) {\n  try {\n    // clear any existing error on the login page\n    yield put({ type: 'CLEAR_LOGIN_ERROR' });\n\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // send the action.payload as the body\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    yield axios.post('/api/user/login', action.payload, config);\n\n    // after the user has logged in\n    // get the user information from the server\n    yield put({ type: 'FETCH_USER' });\n    yield put({ type: 'FETCH_ALL_REALMS' });\n\n  } catch (error) {\n    console.log('Error with user login:', error);\n    if (error.response.status === 401) {\n      // The 401 is the error status sent from passport\n      // if user isn't in the database or\n      // if the username and password don't match in the database\n      yield put({ type: 'LOGIN_FAILED' });\n    } else {\n      // Got an error that wasn't a 401\n      // Could be anything, but most common cause is the server is not started\n      yield put({ type: 'LOGIN_FAILED_NO_CODE' });\n    }\n  }\n}\n\n// worker Saga: will be fired on \"LOGOUT\" actions\nfunction* logoutUser(action) {\n  try {\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    // when the server recognizes the user session\n    // it will end the session\n    yield axios.post('/api/user/logout', config);\n\n    // now that the session has ended on the server\n    // remove the client-side user object to let\n    // the client-side code know the user is logged out\n    yield put({ type: 'UNSET_USER' });\n\n  } catch (error) {\n    console.log('Error with user logout:', error);\n  }\n}\n\nfunction* loginSaga() {\n  yield takeLatest('LOGIN', loginUser);\n  yield takeLatest('LOGOUT', logoutUser);\n}\n\nexport default loginSaga;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// worker Saga: will be fired on \"REGISTER\" actions\nfunction* registerUser(action) {\n  try {\n    // clear any existing error on the registration page\n    yield put({ type: 'CLEAR_REGISTRATION_ERROR' });\n\n    // passes the username and password from the payload to the server\n    yield axios.post('/api/user/register', action.payload);\n\n    // automatically log a user in after registration\n    yield put({ type: 'LOGIN', payload: action.payload });\n\n    // set to 'login' mode so they see the login screen\n    // after registration or after they log out\n    yield put({ type: 'SET_TO_LOGIN_MODE' });\n  } catch (error) {\n    console.log('Error with user registration:', error);\n    yield put({ type: 'REGISTRATION_FAILED' });\n  }\n}\n\nfunction* registrationSaga() {\n  yield takeLatest('REGISTER', registerUser);\n}\n\nexport default registrationSaga;\n","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\n// worker Saga: will be fired on \"FETCH_USER\" actions\nfunction* fetchUser() {\n  try {\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    // If a user is logged in, this will return their information\n    // from the server session (req.user)\n    const response = yield axios.get('/api/user', config);\n\n    // now that the session has given us a user object\n    // with an id and username set the client-side user object to let\n    // the client-side code know the user is logged in\n    yield put({ type: 'SET_USER', payload: response.data });\n  } catch (error) {\n    console.log('User get request failed', error);\n  }\n}\n\nfunction* userSaga() {\n  yield takeLatest('FETCH_USER', fetchUser);\n}\n\nexport default userSaga;\n","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\n// worker Saga: will be fired on \"FETCH_USER\" actions\nfunction* submitSection(action) {\n  try {\n    yield axios.post('/api/section/add', action.payload);\n  } catch (error) {\n    console.log('User get request failed', error);\n  }\n}\n\n// this get call takes care of getting all sections from the database\nfunction* getAllSections() {\n  try {\n    const response = yield axios.get('/api/section/all');\n    yield put({ type: 'SET_ALL_SECTIONS', payload: response.data });\n    // console.log('test console:',response.data);\n  } catch (error) {\n    console.log('Error with GET:', error);\n  }\n}\n\n// this get call takes care of getting a section from the database\nfunction* getSection(action) {\n  try {\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    // If a user is logged in, this will return their information\n    // from the server session (req.user)\n    const response = yield axios.get(\n      `/api/section/get-section/${action.payload.sectionId}`,\n      config\n    );\n\n    // now that the session has given us a user object\n    // with an id and username set the client-side user object to let\n    // the client-side code know the user is logged in\n\n    yield put({ type: 'SET_SECTION', payload: response.data });\n  } catch (error) {\n    console.log('User get request failed', error);\n  }\n}\n\n// this delete calls takes care of deleting sections from the database\nfunction* deleteSection(action) {\n  try {\n    // const response =\n    yield axios.delete(`/api/section/${action.payload}`);\n    console.log('response from /api/section delete', action.payload);\n    //call refresh of Get Data list\n    yield put({ type: 'FETCH_ALL_SECTIONS' });\n  } catch (error) {\n    console.log('Error with user logout:', error);\n    console.log('response from /api/tasks delete', action);\n  }\n}\n\n// this post calls takes care of adding questions to the database\nfunction* appendQuestion(action) {\n  try {\n    yield axios.post('/api/section/add-one-question', action.payload);\n    yield put({ type: 'FETCH_SECTION', payload: action.payload });\n  } catch (error) {\n    console.log('User get request failed', error);\n  }\n}\n\n// this put calls takes care of updating questions on the database\nfunction* editQuestions(action) {\n  try {\n    yield axios.put('/api/section/edit-questions', action.payload);\n  } catch (error) {\n    console.log('User get request failed', error);\n  }\n}\n\n// this put calls takes care of updating section on the database\nfunction* changeSectionSaga(action) {\n  try {\n    yield axios.put('/api/section/update', action.payload);\n  } catch (err) {\n    console.log('error', err);\n  }\n}\n\nfunction* sectionSaga() {\n  yield takeLatest('SUBMIT_SECTION', submitSection);\n  yield takeLatest('FETCH_ALL_SECTIONS', getAllSections);\n  yield takeLatest('DELETE_SECTION', deleteSection);\n  yield takeLatest('FETCH_SECTION', getSection);\n  yield takeLatest('CHANGE_SECTION', changeSectionSaga);\n  yield takeLatest('ADD_SINGLE_QUESTION', appendQuestion);\n  yield takeLatest('UPDATE_QUESTIONS', editQuestions);\n}\n\nexport default sectionSaga;\n","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\nfunction* getAllRealms() {\n  try {\n    const response = yield axios.get('/api/realm/all');\n    yield put({ type: 'SET_ALL_REALMS', payload: response.data });\n    console.log('test console:', response.data);\n  } catch (error) {\n    console.log('Error with GET:', error);\n  }\n}\n\nfunction* getRealm(action) {\n  try {\n    const response = yield axios.get(\n      `/api/realm/get-realm/${action.payload.realmId}`\n    );\n\n    yield put({ type: 'SET_REALM', payload: response.data });\n  } catch (error) {\n    console.log('User get request failed', error);\n  }\n}\n\nfunction* submitNewRealm(action) {\n  try {\n    yield axios.post('/api/realm/add-new-realm', action.payload);\n  } catch (error) {\n    console.log('error with post request', error);\n  }\n}\n\nfunction* removeRealm(action) {\n  try {\n    yield axios.delete(`/api/realm/remove/${action.payload}`);\n    yield put({ type: 'FETCH_ALL_REALMS' });\n  } catch (error) {\n    console.log('error with delete request', error);\n  }\n}\n\nfunction* realmSaga() {\n  yield takeLatest('FETCH_REALM', getRealm);\n  yield takeLatest('FETCH_ALL_REALMS', getAllRealms);\n  yield takeLatest('POST_NEW_REALM', submitNewRealm);\n  yield takeLatest('DELETE_REALM', removeRealm);\n}\n\nexport default realmSaga;\n","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\n// worker Saga: will be fired on \"SUBMIT_RESPONSE\" actions\nfunction* submitResponse(action) {\n  try {\n    yield axios.post('/api/answer/add', action.payload);\n  } catch (error) {\n    console.log('User get request failed', error);\n  }\n}\n\n// worker Saga: will be fired on \"SUBMIT_RESPONSE\" actions\nfunction* submitFeedback(action) {\n  try {\n    yield axios.post('/api/answer/feedback/add', action.payload);\n    yield put({ type: 'PROGRESS_COMPLETE', payload: action.payload });\n  } catch (error) {\n    console.log('User get request failed', error);\n  }\n}\n\n// WORK IN PROGRESS, UNUSED\n// worker Saga: will be fired on \"UPDATE_RESPONSE\" actions\n// function* updateResponse(action) {\n//   try {\n//     yield axios.put('/api/answer/update', action.payload);\n//   } catch (error) {\n//     console.log('User get request failed', error);\n//   }\n// }\n\nfunction* responseSaga() {\n  yield takeLatest('SUBMIT_RESPONSE', submitResponse);\n  // yield takeLatest('UPDATE_RESPONSE', updateResponse);\n  yield takeLatest('SUBMIT_FEEDBACK', submitFeedback);\n}\n\nexport default responseSaga;\n","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\n\n// worker Saga: will be fired on \"FETCH_PROGRESS\" actions\nfunction* getProgress(action) {\n  try {\n\n    const response = yield axios.get(`/api/progress/get-save/${action.payload.realmId}`);\n    yield put({ type: 'SET_PROGRESS', payload: response.data });\n\n  } catch (error) {\n    console.log('User get request failed', error );\n  }\n}\n\n// worker Saga: will be fired on \"CREATE_PROGRESS\" actions\nfunction* createProgress(action) {\n  try {\n\n    yield axios.post('/api/progress/create-save',  action.payload);\n\n  } catch (error) {\n    console.log('User get request failed', error);\n  }\n}\n\n// worker Saga: will be fired on \"UPDATE_PROGRESS\" actions\nfunction* updateProgress(action) {\n  try {\n\n    yield axios.put('/api/progress/update-save',  action.payload);\n    yield put({ type: 'FETCH_PROGRESS', payload: action.payload });\n\n  } catch (error) {\n    console.log('User get request failed', error);\n  }\n}\n\n// worker Saga: will be fired on \"UPDATE_PROGRESS\" actions\nfunction* completeProgress(action) {\n  try {\n\n    yield axios.put('/api/progress/update-save/completed',  action.payload);\n\n  } catch (error) {\n    console.log('User get request failed', error);\n  }\n}\n\n// worker Saga: will be fired on \"UPDATE_PROGRESS\" actions\nfunction* updateFormProgress(action) {\n  try {\n\n    yield axios.put('/api/progress/update-form',  action.payload);\n    yield put({ type: 'FETCH_PROGRESS', payload: action.payload });\n\n  } catch (error) {\n    console.log('User get request failed', error);\n  }\n}\n\n\n\nfunction* progressSaga() {\n  yield takeLatest('CREATE_PROGRESS', createProgress);\n  yield takeLatest('FETCH_PROGRESS', getProgress);\n  yield takeLatest('UPDATE_PROGRESS', updateProgress);\n  yield takeLatest('FORM_FINISHED', updateFormProgress);\n  yield takeLatest('PROGRESS_COMPLETE', completeProgress);\n}\n\nexport default progressSaga;\n","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\n// this get calls  takes care of getting curriculum from the database\nfunction* getCurriculum(action) {\n  try {\n    const response = yield axios.get(`/api/statistic/get/curriculum`);\n\n    yield put({ type: 'SET_STATISTICS', payload: response.data });\n  } catch (error) {\n    console.log('User get request failed', error);\n  }\n}\n\n// this get calls  takes care of getting demographics from the database\nfunction* getDemographics(action) {\n  try {\n    const response = yield axios.get(`/api/statistic/get/demographics`);\n\n    yield put({ type: 'SET_STATISTICS', payload: response.data });\n  } catch (error) {\n    console.log('User get request failed', error);\n  }\n}\n// this get calls  takes care of getting user feedback from the database\nfunction* getFeedback(action) {\n  try {\n    const response = yield axios.get(`/api/statistic/get/feedback`);\n\n    yield put({ type: 'SET_STATISTICS', payload: response.data });\n  } catch (error) {\n    console.log('User get request failed', error);\n  }\n}\n\nfunction* realmSaga() {\n  yield takeLatest('FETCH_CURRICULUM', getCurriculum);\n  yield takeLatest('FETCH_DEMOGRAPHICS', getDemographics);\n  yield takeLatest('FETCH_FEEDBACK', getFeedback);\n}\n\nexport default realmSaga;\n","import { all } from 'redux-saga/effects';\nimport loginSaga from './loginSaga';\nimport registrationSaga from './registrationSaga';\nimport userSaga from './userSaga';\nimport sectionSaga from './sectionSaga';\nimport realmSaga from './realmSaga';\nimport responseSaga from './responseSaga';\nimport progressSaga from './progressSaga';\nimport statisticSaga from './statisticSaga';\n\n// rootSaga is the primary saga.\n// It bundles up all of the other sagas so our project can use them.\n// This is imported in index.js as rootSaga\n\n// some sagas trigger other sagas, as an example\n// the registration triggers a login\n// and login triggers setting the user\nexport default function* rootSaga() {\n  yield all([\n    loginSaga(),\n    progressSaga(),\n    realmSaga(),\n    registrationSaga(),\n    responseSaga(),\n    sectionSaga(),\n    userSaga(),\n    statisticSaga(),\n  ]);\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n// import ExitToAppIcon from '@material-ui/icons/ExitToApp';\n\nconst LogOutButton = (props) => (\n  <Link\n    // This button shows up in multiple locations and is styled differently\n    // because it's styled differently depending on where it is used, the className\n    // is passed to it from it's parents through React props\n    className={props.className}\n    onClick={() => props.dispatch({ type: 'LOGOUT' })}\n    to=\"/home\"\n  >\n    Log Out\n  </Link>\n);\n\n// This component doesn't need 'mapStateToProps'\n// because it doesn't care what the current state is.\n// No matter what the redux state is, this button will always be a log out button\n// this component still needs 'connect' though, because it is going to dispatch a redux action\nexport default connect()(LogOutButton);\n","const styles = (theme) => ({\n  header: {\n    'text-align': 'center',\n    width: '100%',\n    margin: '5% auto 5% auto',\n    font: '400 30px Poppins, sans-serif',\n    color: '#1f3556',\n  },\n  headerMore: {\n    'text-align': 'center',\n    width: '100%',\n    margin: '1% auto 5% auto',\n    font: '400 30px Poppins, sans-serif',\n    color: '#1f3556',\n  },\n  headerView: {\n    'text-align': 'center',\n    width: '100%',\n    margin: '2% auto 2% auto',\n    font: '400 30px Poppins, sans-serif',\n    color: '#1f3556',\n  },\n  headerLess: {\n    'text-align': 'center',\n    width: '100%',\n    margin: '1% auto -4% auto',\n    font: '400 25px Poppins, sans-serif',\n    color: '#1f3556',\n  },\n  headerLesser: {\n    'text-align': 'center',\n    width: '100%',\n    margin: '1% auto 0% auto',\n    font: '400 25px Poppins, sans-serif',\n    color: '#1f3556',\n  },\n  headerLeast: {\n    'text-align': 'center',\n    width: '100%',\n    margin: '4% auto -3% auto',\n    font: '400 20px Poppins, sans-serif',\n    color: '#1f3556',\n  },\n  paddingR: { padding: '0px 10px 0px 0px' },\n  paddingLR: { padding: '0px 10px 0px 10px' },\n  formControl: {\n    margin: '0px 0px 15px 0px',\n    width: '70%',\n  },\n  formContainer: {\n    'text-align': 'center',\n    width: '100%',\n    margin: '-2px auto 15px auto',\n    position: 'relative',\n  },\n  formContainerQuestion: {\n    'text-align': 'center',\n    width: '100%',\n    margin: '5% auto 15px auto',\n    position: 'relative',\n  },\n  formContainerVideo: {\n    marginTop: '-20px',\n  },\n\n  grayPreview: {\n    margin: '1.5% 0px 0px 0px',\n    padding: '0px 10px 0 10px',\n    font: '400 30px Poppins, sans-serif',\n    color: 'gray',\n  },\n  preview: {\n    margin: '1.5% 0px 0px 0px',\n    padding: '0px 10px 0 10px',\n    font: '400 30px Poppins, sans-serif',\n    color: '#1f3556',\n    '&:hover': {\n      color: '#64add9',\n    },\n  },\n  previewTitle: {\n    font: '400 20px Poppins, sans-serif',\n    color: '#1f3556',\n    marginTop: '-50px auto 0px auto',\n    'text-align': 'center',\n  },\n  clickedPreview: {\n    margin: '1.5% 0px 0px 0px',\n    padding: '0px 10px 0 10px',\n    font: '400 30px Poppins, sans-serif',\n    color: '#64add9',\n    '&:hover': {\n      color: '#1f3556',\n    },\n  },\n  sectionVideoContainer: {\n    position: 'relative',\n    padding: ' 30px 0 56.25% 0',\n    marginBottom: '-20px',\n  },\n  sectionVideo: {\n    'text-align': 'center',\n    margin: 'auto',\n    width: '90%',\n    height: '90%',\n    'border-radius': '5px',\n    top: 0,\n    left: 0,\n    right: 0,\n    position: 'absolute',\n  },\n  sectionImageContainer: {\n    'text-align': 'center',\n    width: '100%',\n    height: '100%',\n    position: 'relative',\n  },\n  sectionImage: {\n    'text-align': 'center',\n    width: '92%',\n    'border-radius': '7px',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    paddingBottom: '-10px',\n  },\n  inputControl: {\n    margin: '0px auto 15px auto',\n    width: '50%',\n    font: '500 10px Poppins, sans-serif',\n    color: '#1f3556',\n  },\n  inputControlIconSelector: {\n    margin: '0px auto 15px auto',\n    width: '20%',\n    font: '500 10px Poppins, sans-serif',\n    color: '#1f3556',\n  },\n  inputControlQuestion: {\n    margin: '0px auto 15px auto',\n    width: '100%',\n    font: '500 10px Poppins, sans-serif',\n    color: '#1f3556',\n  },\n  inputControlLink: {\n    margin: '0px auto 10px 50px',\n    'text-align': 'center',\n    width: '50%',\n    font: '500 10px Poppins, sans-serif',\n    color: '#1f3556',\n  },\n  inputControlTextContent: {\n    margin: '10px auto 0px auto',\n    'max-height': 500,\n    width: '100%',\n    font: '500 10px Poppins, sans-serif',\n    color: '#1f3556',\n  },\n  inputControlContentDescription: {\n    margin: '20px auto -10px auto',\n    'max-height': 500,\n    width: '100%',\n    font: '500 10px Poppins, sans-serif',\n    color: '#1f3556',\n  },\n  previewDescription: {\n    font: '300 12px Poppins, sans-serif',\n    color: '#1f3556',\n    padding: '0px 10% 0px 10%',\n    margin: '-1% 0px 0px 0px',\n    'text-align': 'left',\n  },\n  helperText: {\n    color: '#1f3556',\n  },\n  input: {\n    color: '#1f3556',\n  },\n  cssLabel: {\n    color: '#1f3556',\n    '&.Mui-focused': {\n      color: '#1f3556',\n    },\n    cssOutlinedSelect: {\n      '&$cssFocused $notchedOutline': {\n        borderColor: `#1f3556 !important`,\n        color: '#1f3556',\n      },\n    },\n  },\n  notchedOutline: {\n    borderWidth: '2px',\n    borderColor: '#1f3556 !important',\n  },\n  menu: { color: 'blue' },\n  adminButtonContainer: {\n    padding: '0px 0px 10px 0px',\n    margin: '0% 0px -0% 0px',\n    width: '100%',\n    'text-align': 'center',\n  },\n  adminButton: {\n    font: '300 12px Poppins, sans-serif',\n    backgroundColor: '#1f3556',\n    color: '#fff',\n    'border-radius': '25px',\n    width: '50%',\n    padding: '10px 40px 10px 40px',\n    margin: '0px 2% 4% 2%',\n    'text-transform': 'capitalize',\n    '&:hover': {\n      backgroundColor: '#457b9d',\n    },\n  },\n  adminButtonDialog: {\n    font: '300 16px Poppins, sans-serif',\n    backgroundColor: '#1f3556',\n    color: '#fff',\n    'border-radius': '7px',\n    padding: '10px 20px 10px 20px',\n    margin: '0px 0px 0% 0%',\n    'text-transform': 'capitalize',\n    '&:hover': {\n      backgroundColor: '#457b9d',\n    },\n  },\n  adminButtonEdit: {\n    font: '300 12px Poppins, sans-serif',\n    backgroundColor: '#1f3556',\n    color: '#fff',\n    'border-radius': '25px',\n    width: '70%',\n    padding: '10px 40px 10px 40px',\n    margin: '0px 2% 4% 2%',\n    'text-transform': 'capitalize',\n    '&:hover': {\n      backgroundColor: '#457b9d',\n    },\n  },\n  adminButtonPreviewAgain: {\n    font: '300 12px Poppins, sans-serif',\n    backgroundColor: '#1f3556',\n    color: '#fff',\n    'border-radius': '25px',\n    width: '70%',\n    padding: '10px 0px 10px 0px',\n    margin: '-1% 2% 4% 2%',\n    'text-transform': 'capitalize',\n    '&:hover': {\n      backgroundColor: '#457b9d',\n    },\n  },\n\n  adminButtonAdd: {\n    font: '300 16px Poppins, sans-serif',\n    backgroundColor: '#1f3556',\n    color: '#fff',\n    'border-radius': '25px',\n    width: '30%',\n    padding: '10px 0px 10px 0px',\n    margin: '0px 15% 3% 15%',\n    'text-transform': 'capitalize',\n    '&:hover': {\n      backgroundColor: '#457b9d',\n    },\n  },\n  adminButtonAddMarginLess: {\n    font: '300 16px Poppins, sans-serif',\n    backgroundColor: '#1f3556',\n    color: '#fff',\n    'border-radius': '25px',\n    width: '30%',\n    padding: '10px 0px 10px 0px',\n    margin: '-10px 15% 3% 15%',\n    'text-transform': 'capitalize',\n    '&:hover': {\n      backgroundColor: '#457b9d',\n    },\n  },\n  adminButtonView: {\n    font: '300 18px Poppins, sans-serif',\n    backgroundColor: '#1f3556',\n    color: '#fff',\n    'border-radius': '25px',\n    width: '10%',\n    padding: '10px 0px 10px 0px',\n    margin: '0px 15% 3% 15%',\n    'text-transform': 'capitalize',\n    '&:hover': {\n      backgroundColor: '#457b9d',\n    },\n  },\n  adminButtonPreview: {\n    font: '300 18px Poppins, sans-serif',\n    backgroundColor: '#1f3556',\n    color: '#fff',\n    'border-radius': '25px',\n    width: '20%',\n    padding: '10px 0px 10px 0px',\n    margin: '0px 15% 3% 15%',\n    'text-transform': 'capitalize',\n    '&:hover': {\n      backgroundColor: '#457b9d',\n    },\n  },\n  squareButtons: {\n    font: '300 40px Poppins, sans-serif',\n    backgroundColor: '#1f3556',\n    color: '#fff',\n    'border-radius': '25px',\n    width: '40%',\n    padding: '120px 20px 120px 20px',\n    margin: '4% 2% 4% 2%',\n    'text-transform': 'capitalize',\n    '&:hover': {\n      backgroundColor: '#457b9d',\n    },\n  },\n  downloadButton: {\n    font: '300 40px Poppins, sans-serif',\n    backgroundColor: '#1f3556',\n    color: '#fff',\n    'border-radius': '25px',\n    width: '30%',\n    padding: '40px 0px 40px 0px',\n    margin: '0px 2% 4% 2%',\n    'text-transform': 'capitalize',\n    'text-decoration': 'none',\n    '&:hover': {\n      backgroundColor: '#457b9d',\n    },\n  },\n  dialogContent: { margin: '5px 0px -5px 0px' },\n  downloadButtonExtended: {\n    font: '300 200% Poppins, sans-serif',\n    backgroundColor: '#1f3556',\n    color: '#fff',\n    'border-radius': '25px',\n    width: '25%',\n    padding: '40px 10px 40px 10px',\n    margin: '0px 4% 4% 4%',\n    'text-transform': 'capitalize',\n    'text-decoration': 'none',\n    '&:hover': {\n      backgroundColor: '#457b9d',\n    },\n  },\n  downloadButtonLink: {\n    color: '#fff',\n    'text-decoration': 'none',\n  },\n  statisticsHeader: {\n    'text-align': 'center',\n    width: '100%',\n    margin: '5% auto 10% auto',\n\n    font: '400 40px Poppins, sans-serif',\n    color: '#1f3556',\n  },\n  downloadIcon: { 'font-size': '30px', margin: ' 0px 4px -4px 0px ' },\n  welcomeMessage: {\n    margin: '5% 2% 4% 2%',\n    font: '400 40px Poppins, sans-serif',\n    'text-align': 'center',\n    color: '#1f3556',\n  },\n  paper: {\n    width: '27%',\n    marginTop: '5%',\n    marginBottom: '3%',\n    overflowX: 'auto',\n  },\n  paperView: {\n    width: '40%',\n    marginTop: '5%',\n    marginBottom: '3%',\n    overflowX: 'auto',\n  },\n  paperViewRealm: {\n    width: '25%',\n    marginTop: '5%',\n    marginBottom: '3%',\n    overflowX: 'auto',\n  },\n  table: {\n    minWidth: '35%',\n  },\n  tableHeader: { font: '500 18px Poppins, sans-serif' },\n  tableCell: {\n    font: '400 16px Poppins, sans-serif',\n    margin: '0% -10px 0% -10px',\n  },\n  tableCellType: { font: '400 30px Poppins, sans-serif', 'font-size': '50px' },\n  checkBoxIcon: {\n    color: '#1f3556',\n    padding: '0px 12px 0px 0px',\n  },\n  addSectionResourceIcon: {\n    color: '#1f3556',\n    'font-size': '50px',\n  },\n  removeSectionResourceIcon: {\n    color: '#1f3556',\n    'font-size': '35px',\n  },\n  addSectionViewIcon: {\n    'font-size': '26px',\n    marginTop: '-.5%',\n    marginRight: '.5%',\n  },\n  editSectionPreviewIcon: {\n    'font-size': '20px',\n    marginTop: '-.5%',\n    marginRight: '2%',\n  },\n  previewSectionPreviewIcon: {\n    'font-size': '18px',\n    marginRight: '1%',\n  },\n  viewSectionDeleteIcon: {\n    color: '#e92f26',\n    'font-size': '26px',\n    marginTop: '9%',\n  },\n  viewSectionIcon: {\n    color: '#1f3556',\n    'font-size': '26px',\n    marginTop: '6%',\n  },\n  noDecoration: { 'text-decoration': 'none' },\n  root: {\n    height: 180,\n  },\n  container: {\n    display: 'flex',\n  },\n  svg: {\n    width: 100,\n    height: 100,\n  },\n  polygon: {\n    fill: theme.palette.common.white,\n    stroke: theme.palette.divider,\n    strokeWidth: 1,\n  },\n});\n\nexport default styles;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport LogOutButton from '../LogOutButton/LogOutButton';\nimport './Nav.css';\nimport styles from '../../themes/adminTheme';\n\nimport {\n  withStyles,\n} from '@material-ui/core';\n// const { classes }\nconst Nav = (props) => (\n  <div className=\"nav\">\n    {props.user.admin ? (\n      <Link to=\"/home\">\n        <h2 className=\"nav-title-admin\">\n          <img alt=\"logo\" className=\"logo\" src=\"/images/logo.png\"></img>\n        </h2>\n      </Link>\n    ) : (\n      <Link to=\"/home\">\n        <h2 className=\"nav-title\">\n          <img alt=\"logo\" className=\"logo\" src=\"/images/logo.png\"></img>\n        </h2>\n      </Link>\n    )}\n    <div className=\"nav-right\">\n      {/* Show the link to the info page and the logout button if the user is logged in */}\n      {props.user.admin ? (\n        <>\n          <Link className=\"nav-link\" to=\"/view-realms\">\n            Realms\n          </Link>\n          <Link className=\"nav-link\" to=\"/view-sections\">\n            Sections\n          </Link>\n          <Link className=\"nav-link\" to=\"/statistics\">\n            Statistics\n          </Link>\n          <LogOutButton className=\"nav-link\" />\n        </>\n      ) : (\n        <>\n          <span></span>\n          <span></span>\n          <LogOutButton className=\"nav-user-logout\" />\n        </>\n      )}\n\n      {/* Always show this link since the about page is not protected */}\n    </div>\n  </div>\n);\n\n// Instead of taking everything from state, we just want the user\n// object to determine if they are logged in\n// if they are logged in, we show them a few more links\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({ user }) => ({ user });\nconst mapStateToProps = (state) => ({\n  user: state.user,\n});\n\n// export default connect(mapStateToProps)(Nav);\nexport default withStyles(styles)(connect(mapStateToProps)(Nav));\n","const styles = (theme) => ({\n  allContainer: {},\n  videoContainer: {\n    position: 'absolute',\n    height: '100%',\n    width: '100%',\n    overflow: 'hidden',\n    'object-fit': 'cover',\n  },\n  videoContainerMobile: {\n    position: 'absolute',\n    height: '135%',\n    width: '100%',\n    overflow: 'hidden',\n    'object-fit': 'cover',\n  },\n  videoContainerRegister: {\n    position: 'absolute',\n\n    height: '150%',\n    width: '100%',\n    overflow: 'hidden',\n    'object-fit': 'cover',\n  },\n  videoContainerRegisterMobile: {\n    position: 'absolute',\n    height: '150%',\n    width: '100%',\n    overflow: 'hidden',\n    'object-fit': 'cover',\n  },\n  infinityControl: {\n    'text-align': 'center',\n    position: 'relative',\n    width: '100%',\n    margin: '35% auto 50% auto',\n  },\n  colorLogo: {\n    width: '30%',\n    filter: 'brightness(0) invert(1)',\n  },\n  infinitytext: {\n    font: '300 40px Poppins, sans-serif',\n    color: '#fff',\n    padding: '10px 0px 0px 0px',\n  },\n  leftSideFlex: {\n    flexGrow: 1,\n    height: '765px',\n    display: 'flex',\n  },\n  leftSide: {\n    flexGrow: 1,\n    height: '765px',\n    display: 'none',\n  },\n  rightSide: {\n    flexGrow: 1,\n    height: '765px',\n  },\n  formContainer: {\n    margin: '15% auto 20px auto',\n    'background-color': 'transparent',\n    'text-align': 'center',\n    position: 'relative',\n    color: '#f1f1f1',\n    width: '55%',\n    padding: '10px 0px 0px 0px',\n  },\n  formContainerMobile: {\n    margin: '10% auto 0px auto',\n    'background-color': 'transparent',\n    'text-align': 'center',\n    position: 'relative',\n    color: '#f1f1f1',\n    width: '96%',\n    padding: '10px 0px 0px 0px',\n  },\n  brandNameControl: {\n    font: '600 50px Poppins, sans-serif',\n    position: 'relative',\n    width: '100%',\n  },\n  signUpControl: {\n    font: '500 40px Poppins, sans-serif',\n    position: 'relative',\n    width: '100%',\n    margin: '-10px 0px 20px 0px',\n  },\n  requiredControl: {\n    font: '400 17px Poppins, sans-serif',\n    position: 'relative',\n    width: '100%',\n    'text-align': 'left',\n    color: 'white',\n    padding: '0px 0px 0px 20px',\n    margin: '-10px 0px 10px 0px',\n  },\n  formControl: {\n    margin: '0px 0px 15px 0px',\n    width: '70%',\n  },\n  formControlRegistrationFullWidth: {\n    margin: '0px 0px -5px 0px',\n    width: '93%',\n  },\n  formControlRegistrationFullWidthMobile: {\n    margin: '0px 0px 0px 0px',\n    width: '93%',\n  },\n  formControlRegistration: { margin: '0px 5px -5px 5px', width: '45%' },\n  inputControl: {\n    margin: '0px 0px 15px 0px',\n    width: '100%',\n    font: '500 10px Poppins, sans-serif',\n    color: '#fff',\n  },\n  formControlRegistrationSelector: {\n    margin: '0px 5px 10px 5px',\n    width: '46%',\n  },\n  formControlRegistrationSelectorMobile: {\n    margin: '0px 5px 10px 5px',\n    width: '47%',\n  },\n  cssLabel: {\n    color: 'white',\n    '&.Mui-focused': {\n      color: 'white',\n    },\n    cssOutlinedSelect: {\n      '&$cssFocused $notchedOutline': {\n        borderColor: `white !important`,\n        color: 'white',\n      },\n    },\n  },\n  notchedOutline: {\n    borderWidth: '2px',\n    borderColor: 'white !important',\n  },\n  helperText: {\n    color: 'white',\n  },\n  submitButtonContainer: { width: '100%', position: 'relative' },\n  submitButton: {\n    color: { opacity: 0 },\n    'mix-blend-mode': 'screen',\n    'background-color': 'white',\n    font: '600 16px Poppins, sans-serif',\n    'text-transform': 'capitalize',\n    border: '#fff solid 2px',\n    margin: '20px auto 60px auto',\n    padding: '10px auto 0px auto',\n    'border-radius': '25px',\n    '&:hover': {\n      'background-color': { opacity: 0 },\n      border: '#fff solid 2px',\n      color: '#fff',\n    },\n    width: '70%',\n    position: 'relative',\n  },\n  submitButtonRegister: {\n    color: { opacity: 0 },\n    'mix-blend-mode': 'screen',\n    'background-color': 'white',\n    font: '600 16px Poppins, sans-serif',\n    'text-transform': 'capitalize',\n    border: '#fff solid 2px',\n    margin: '5px auto 15px auto',\n    padding: '15px auto 5px auto',\n    'border-radius': '25px',\n    '&:hover': {\n      'background-color': { opacity: 0 },\n      border: '#fff solid 2px',\n      color: '#fff',\n    },\n    width: '95%',\n    position: 'relative',\n  },\n  register: {\n    'text-align': 'center',\n    'text-transform': 'capitalize',\n    font: '500 15px Poppins, sans-serif',\n    color: '#fff',\n    width: '100%',\n    position: 'relative',\n    'text-decoration': 'underline',\n  },\n  categorySelector: {\n    color: '#fff',\n    marginTop: '-0px',\n    width: '50px',\n    '&:focus': {\n      'background-color': { opacity: 0 },\n      border: '#fff solid 2px',\n      color: '#fff',\n    },\n  },\n  categorySelectorMobile: {\n    color: '#fff',\n    marginTop: '-0px',\n    width: '50px',\n    '&:focus': {\n      'background-color': { opacity: 0 },\n      border: '#fff solid 2px',\n      color: '#fff',\n    },\n  },\n  // this is for the input and not the selector\n  input: {\n    color: 'white',\n    '&:focus': {\n      backgroundColor: 'transparent',\n    },\n  },\n  icon: {\n    fill: 'white',\n  },\n  outlined: {\n    border: '#fff solid 3px',\n    '&:hover': {\n      border: 'transparent solid 3px',\n    },\n    '&:focus': {\n      border: 'transparent solid 3px',\n    },\n  },\n  invisibleText: { color: 'transparent' },\n});\n\nexport default styles;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  withStyles,\n  FormControl,\n  Grid,\n  TextField,\n  Button,\n  Hidden,\n} from '@material-ui/core';\nimport styles from '../../themes/loginRegisterTheme';\nimport Fade from 'react-reveal/Fade';\n\nclass LoginPage extends Component {\n  state = {\n    username: '',\n    password: '',\n  };\n\n  login = (event) => {\n    event.preventDefault();\n\n    if (this.state.username && this.state.password) {\n      this.props.dispatch({\n        type: 'LOGIN',\n        payload: {\n          username: this.state.username,\n          password: this.state.password,\n        },\n      });\n    } else {\n      this.props.dispatch({ type: 'LOGIN_INPUT_ERROR' });\n    }\n  }; // end login\n\n  handleInputChangeFor = (propertyName) => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <Grid id=\"LoginPageContainer\" container spacing={0}>\n        <img\n          alt=\"a calming ocean view with a rainbow\"\n          className={\n            window.screen.width > 420\n              ? classes.videoContainer\n              : classes.videoContainerMobile\n          }\n          src=\"/images/scenery-2846778.jpg\"\n        />\n        <Hidden smDown>\n          <Grid className={classes.leftSideFlex} item md={6} lg={6}>\n            <div className={classes.infinityControl}>\n              <Fade>\n                <img\n                  alt=\"logo\"\n                  className={classes.colorLogo}\n                  src=\"images/logo.png\"\n                />\n\n                <p className={classes.infinitytext}>Aspire to Inspire</p>\n              </Fade>\n            </div>\n          </Grid>\n        </Hidden>\n        <Grid className={classes.rightSide} item xs={12} sm={12} md={6} lg={6}>\n          <div className=\"loginPage\">\n            {this.props.errors.loginMessage && (\n              <h2 className=\"alert\" role=\"alert\">\n                {this.props.errors.loginMessage}\n              </h2>\n            )}\n            <form\n              className={\n                window.screen.width > 420\n                  ? classes.formContainer\n                  : classes.formContainerMobile\n              }\n              onSubmit={this.login}\n              autoComplete=\"off\"\n            >\n              <h2 className={classes.brandNameControl}>UNiQUE</h2>\n              <FormControl className={classes.formControl}>\n                <div>\n                  <TextField\n                    label=\"Username\"\n                    helperText=\"Required\"\n                    variant=\"outlined\"\n                    className={classes.inputControl}\n                    value={this.state.username}\n                    onChange={this.handleInputChangeFor('username')}\n                    InputLabelProps={{\n                      classes: {\n                        root: classes.cssLabel,\n                        className: classes.floatingLabelFocusStyle,\n                      },\n                    }}\n                    InputProps={{\n                      classes: {\n                        input: classes.input,\n                        root: classes.cssOutlinedInput,\n                        notchedOutline: classes.notchedOutline,\n                      },\n                    }}\n                    FormHelperTextProps={{\n                      classes: { root: classes.helperText },\n                    }}\n                  />\n                </div>\n              </FormControl>\n              <FormControl className={classes.formControl}>\n                <div>\n                  <TextField\n                    label=\"Password\"\n                    type=\"password\"\n                    helperText=\"Required\"\n                    variant=\"outlined\"\n                    className={classes.inputControl}\n                    value={this.state.password}\n                    onChange={this.handleInputChangeFor('password')}\n                    InputLabelProps={{\n                      classes: {\n                        root: classes.cssLabel,\n\n                        className: classes.floatingLabelFocusStyle,\n                      },\n                    }}\n                    InputProps={{\n                      classes: {\n                        input: classes.input,\n                        root: classes.cssOutlinedInput,\n                        notchedOutline: classes.notchedOutline,\n                      },\n                    }}\n                    FormHelperTextProps={{\n                      classes: { root: classes.helperText },\n                    }}\n                  />\n                </div>\n              </FormControl>\n\n              <div className={classes.submitButtonContainer}>\n                <Button\n                  disableElevation\n                  className={classes.submitButton}\n                  type=\"submit\"\n                  name=\"submit\"\n                  value=\"Log In\"\n                >\n                  Login\n                </Button>\n              </div>\n              <Button\n                className={classes.register}\n                onClick={() => {\n                  this.props.dispatch({ type: 'SET_TO_REGISTER_MODE' });\n                }}\n              >\n                Sign Up\n              </Button>\n            </form>\n          </div>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  errors: state.errors,\n});\n\nexport default withStyles(styles)(connect(mapStateToProps)(LoginPage));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport styles from '../../themes/loginRegisterTheme';\nimport {\n  withStyles,\n  FormControl,\n  Grid,\n  TextField,\n  Button,\n  Hidden,\n  Select,\n  MenuItem,\n  InputLabel,\n} from '@material-ui/core';\n\n// PaperProps handle the scrollable selector\nconst CategorySelectorHeight = 40;\nconst CategorySelectorPaddingTop = 6;\nconst CategorySelectorProps = {\n  PaperProps: {\n    style: {\n      maxHeight: CategorySelectorHeight * 3.4 + CategorySelectorPaddingTop,\n      width: 150,\n    },\n  },\n};\n\nclass RegisterPage extends Component {\n  state = {\n    username: '',\n    password: '',\n    confirm_password: '',\n    first_name: '',\n    last_name: '',\n    email: '',\n    state: '',\n    age: '',\n    ethnicity: '',\n    gender: '',\n    income: '',\n    education_level: '',\n  };\n\n  registerUser = (event) => {\n    event.preventDefault();\n    // console.log('this.state:', this.state);\n\n    if (\n      this.state.username &&\n      this.state.password &&\n      this.state.password === this.state.confirm_password &&\n      this.state.first_name !== '' &&\n      this.state.last_name !== '' &&\n      this.state.email.includes('@') &&\n      this.state.state !== '' &&\n      this.state.age !== '' &&\n      this.state.ethnicity !== '' &&\n      this.state.gender !== '' &&\n      this.state.income !== '' &&\n      this.state.education_level !== ''\n    ) {\n      this.props.dispatch({\n        type: 'REGISTER',\n        payload: {\n          ...this.state,\n        },\n      });\n    } else {\n      this.props.dispatch({ type: 'REGISTRATION_INPUT_ERROR' });\n    }\n  }; // end registerUser\n\n  handleInputChangeFor = (propertyName) => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <Grid id=\"RegisterPageContainer\" container spacing={0}>\n        {/* <video\n          autoPlay\n          playsinline\n          preload\n          muted\n          // controls=\"false\"\n          loop\n          className={\n            window.screen.width > 420\n              ? classes.videoContainer\n              : classes.videoContainerMobile\n          }\n          src=\"https://github.com/brunoreyes/videos/blob/master/goodVideo.mp4?raw=true\"\n        /> */}\n        <img\n          alt=\"a calming ocean view with a rainbow\"\n          className={\n            window.screen.width > 300\n              ? classes.videoContainerRegister\n              : classes.videoContainerRegisterMobile\n          }\n          src=\"/images/scenery-2846778.jpg\"\n        />\n        {/* <iframe\n          src=\"https://player.vimeo.com/video/454034298?autoplay=1&loop=1&autopause=0&background=1&muted=1&controls=0; fullscreen\"\n          width=\"640\"\n          height=\"360\"\n          allowfullscreen\n          className={classes.videoContainer}\n          frameborder=\"0\"\n          allow=\"autoplay; fullscreen\"\n          allowfullscreen\n        /> */}\n        {this.props.errors.registrationMessage && (\n          <h2 className=\"alert\" role=\"alert\">\n            {this.props.errors.registrationMessage}\n          </h2>\n        )}\n        <Hidden mdDown>\n          <Grid\n            // className={classes.leftSide}\n            className={classes.leftSideFlex}\n            item\n            xs={0}\n            sm={0}\n            md={0}\n            lg={6}\n          >\n            <div className={classes.infinityControl}>\n              <img\n                className={classes.colorLogo}\n                alt=\"realm logo\"\n                src=\"images/logo.png\"\n              />\n\n              <p className={classes.infinitytext}>Aspire to Inspire</p>\n            </div>\n          </Grid>\n        </Hidden>\n        <Grid className={classes.rightSide} item xs={12} sm={12} md={12} lg={6}>\n          <form\n            className={\n              window.screen.width > 420\n                ? classes.formContainer\n                : classes.formContainerMobile\n            }\n            onSubmit={this.login}\n            autoComplete=\"off\"\n          >\n            <h1 className={classes.signUpControl}>Sign Up</h1>\n            <h2 className={classes.requiredControl}>Required = *</h2>\n            <FormControl\n              className={\n                window.screen.width > 420\n                  ? classes.formControlRegistrationFullWidth\n                  : classes.formControlRegistrationFullWidthMobile\n              }\n            >\n              <div>\n                <TextField\n                  label=\"Username*\"\n                  variant=\"outlined\"\n                  className={classes.inputControl}\n                  value={this.state.username || ''}\n                  onChange={this.handleInputChangeFor('username')}\n                  InputLabelProps={{\n                    classes: {\n                      root: classes.cssLabel,\n                      className: classes.floatingLabelFocusStyle,\n                    },\n                  }}\n                  InputProps={{\n                    classes: {\n                      input: classes.input,\n                      root: classes.cssOutlinedInput,\n                      notchedOutline: classes.notchedOutline,\n                    },\n                  }}\n                  FormHelperTextProps={{\n                    classes: { root: classes.helperText },\n                  }}\n                />\n              </div>\n            </FormControl>\n            <FormControl className={classes.formControlRegistration}>\n              <div>\n                <TextField\n                  label=\"Password*\"\n                  type=\"password\"\n                  autoComplete=\"current-password\"\n                  variant=\"outlined\"\n                  className={classes.inputControl}\n                  value={this.state.password || ''}\n                  onChange={this.handleInputChangeFor('password')}\n                  InputLabelProps={{\n                    classes: {\n                      root: classes.cssLabel,\n                      className: classes.floatingLabelFocusStyle,\n                    },\n                  }}\n                  InputProps={{\n                    classes: {\n                      input: classes.input,\n                      root: classes.cssOutlinedInput,\n                      notchedOutline: classes.notchedOutline,\n                    },\n                  }}\n                  FormHelperTextProps={{\n                    classes: { root: classes.helperText },\n                  }}\n                />\n              </div>\n            </FormControl>\n            <FormControl className={classes.formControlRegistration}>\n              <div>\n                <TextField\n                  label=\"Confirm Password*\"\n                  variant=\"outlined\"\n                  type=\"password\"\n                  className={classes.inputControl}\n                  value={this.state.confirm_password || ''}\n                  onChange={this.handleInputChangeFor('confirm_password')}\n                  InputLabelProps={{\n                    classes: {\n                      root: classes.cssLabel,\n                      className: classes.floatingLabelFocusStyle,\n                    },\n                  }}\n                  InputProps={{\n                    classes: {\n                      input: classes.input,\n                      root: classes.cssOutlinedInput,\n                      notchedOutline: classes.notchedOutline,\n                    },\n                  }}\n                  FormHelperTextProps={{\n                    classes: { root: classes.helperText },\n                  }}\n                />\n              </div>\n            </FormControl>\n            <FormControl className={classes.formControlRegistration}>\n              <div>\n                <TextField\n                  // id=\"outlined-helperText\"\n                  label=\"First Name*\"\n                  // helperText=\"Required\"\n                  required={true}\n                  variant=\"outlined\"\n                  className={classes.inputControl}\n                  value={this.state.first_name || ''}\n                  onChange={this.handleInputChangeFor('first_name')}\n                  InputLabelProps={{\n                    classes: {\n                      root: classes.cssLabel,\n                      className: classes.floatingLabelFocusStyle,\n                    },\n                  }}\n                  InputProps={{\n                    classes: {\n                      input: classes.input,\n                      root: classes.cssOutlinedInput,\n                      notchedOutline: classes.notchedOutline,\n                    },\n                  }}\n                  FormHelperTextProps={{\n                    classes: { root: classes.helperText },\n                  }}\n                />\n              </div>\n            </FormControl>\n            <FormControl className={classes.formControlRegistration}>\n              <div>\n                <TextField\n                  label=\"Last Name*\"\n                  variant=\"outlined\"\n                  className={classes.inputControl}\n                  value={this.state.last_name || ''}\n                  onChange={this.handleInputChangeFor('last_name')}\n                  InputLabelProps={{\n                    classes: {\n                      root: classes.cssLabel,\n                      className: classes.floatingLabelFocusStyle,\n                    },\n                  }}\n                  InputProps={{\n                    classes: {\n                      input: classes.input,\n                      root: classes.cssOutlinedInput,\n                      notchedOutline: classes.notchedOutline,\n                    },\n                  }}\n                  FormHelperTextProps={{\n                    classes: { root: classes.helperText },\n                  }}\n                />\n              </div>\n            </FormControl>\n            <FormControl\n              className={\n                window.screen.width > 420\n                  ? classes.formControlRegistrationFullWidth\n                  : classes.formControlRegistrationFullWidthMobile\n              }\n            >\n              <div>\n                <TextField\n                  label=\"Email*\"\n                  variant=\"outlined\"\n                  className={classes.inputControl}\n                  value={this.state.email || ''}\n                  onChange={this.handleInputChangeFor('email')}\n                  InputLabelProps={{\n                    classes: {\n                      root: classes.cssLabel,\n                      className: classes.floatingLabelFocusStyle,\n                    },\n                  }}\n                  InputProps={{\n                    classes: {\n                      input: classes.input,\n                      root: classes.cssOutlinedInput,\n                      notchedOutline: classes.notchedOutline,\n                    },\n                  }}\n                  FormHelperTextProps={{\n                    classes: { root: classes.helperText },\n                  }}\n                />\n              </div>\n            </FormControl>\n\n            <FormControl\n              variant=\"outlined\"\n              className={\n                window.screen.width > 370\n                  ? classes.formControlRegistrationSelector\n                  : classes.formControlRegistrationSelectorMobile\n              }\n            >\n              <InputLabel\n                className={\n                  window.screen.width > 370\n                    ? classes.categorySelector\n                    : classes.categorySelectorMobile\n                }\n                label=\"State *\"\n              >\n                State*\n              </InputLabel>\n              <Select\n                label=\"State *\"\n                MenuProps={CategorySelectorProps}\n                value={this.state.state || ''}\n                onChange={this.handleInputChangeFor('state')}\n                inputProps={{\n                  classes: {\n                    icon: classes.icon,\n                    outlined: classes.outlined,\n                  },\n                }}\n                InputLabelProps={{\n                  classes: {\n                    root: classes.cssLabel,\n                    className: classes.floatingLabelFocusStyle,\n                  },\n                }}\n              >\n                <MenuItem value=\"\"></MenuItem>\n                <MenuItem value=\"AL\">AL</MenuItem>\n                <MenuItem value=\"AK\">AK</MenuItem>\n                <MenuItem value=\"AR\">AR</MenuItem>\n                <MenuItem value=\"AZ\">AZ</MenuItem>\n                <MenuItem value=\"CA\">CA</MenuItem>\n                <MenuItem value=\"CO\">CO</MenuItem>\n                <MenuItem value=\"CT\">CT</MenuItem>\n                <MenuItem value=\"DE\">DE</MenuItem>\n                <MenuItem value=\"FL\">FL</MenuItem>\n                <MenuItem value=\"GA\">GA</MenuItem>\n                <MenuItem value=\"HI\">HI</MenuItem>\n                <MenuItem value=\"IA\">IA</MenuItem>\n                <MenuItem value=\"ID\">ID</MenuItem>\n                <MenuItem value=\"IL\">IL</MenuItem>\n                <MenuItem value=\"IN\">IN</MenuItem>\n                <MenuItem value=\"KS\">KS</MenuItem>\n                <MenuItem value=\"KY\">KY</MenuItem>\n                <MenuItem value=\"LA\">LA</MenuItem>\n                <MenuItem value=\"MA\">MA</MenuItem>\n                <MenuItem value=\"MD\">MD</MenuItem>\n                <MenuItem value=\"ME\">ME</MenuItem>\n                <MenuItem value=\"MI\">MI</MenuItem>\n                <MenuItem value=\"MN\">MN</MenuItem>\n                <MenuItem value=\"MO\">MO</MenuItem>\n                <MenuItem value=\"MS\">MS</MenuItem>\n                <MenuItem value=\"MT\">MT</MenuItem>\n                <MenuItem value=\"NC\">NC</MenuItem>\n                <MenuItem value=\"ND\">ND</MenuItem>\n                <MenuItem value=\"NE\">NE</MenuItem>\n                <MenuItem value=\"NH\">NH</MenuItem>\n                <MenuItem value=\"NJ\">NJ</MenuItem>\n                <MenuItem value=\"NM\">NM</MenuItem>\n                <MenuItem value=\"NV\">NV</MenuItem>\n                <MenuItem value=\"NY\">NY</MenuItem>\n                <MenuItem value=\"OH\">OH</MenuItem>\n                <MenuItem value=\"OK\">OK</MenuItem>\n                <MenuItem value=\"OR\">OR</MenuItem>\n                <MenuItem value=\"PA\">PA</MenuItem>\n                <MenuItem value=\"RI\">RI</MenuItem>\n                <MenuItem value=\"SC\">SC</MenuItem>\n                <MenuItem value=\"SD\">SD</MenuItem>\n                <MenuItem value=\"TN\">TN</MenuItem>\n                <MenuItem value=\"TX\">TX</MenuItem>\n                <MenuItem value=\"UT\">UT</MenuItem>\n                <MenuItem value=\"VA\">VA</MenuItem>\n                <MenuItem value=\"VT\">VT</MenuItem>\n                <MenuItem value=\"WA\">WA</MenuItem>\n                <MenuItem value=\"WI\">WI</MenuItem>\n                <MenuItem value=\"WV\">WV</MenuItem>\n                <MenuItem value=\"WY\">WY</MenuItem>\n              </Select>\n            </FormControl>\n            <FormControl\n              variant=\"outlined\"\n              className={classes.formControlRegistrationSelector}\n            >\n              <InputLabel className={classes.categorySelector} label=\"Age *\">\n                Age*\n              </InputLabel>\n              <Select\n                label=\"Age *\"\n                MenuProps={CategorySelectorProps}\n                value={this.state.age || ''}\n                onChange={this.handleInputChangeFor('age')}\n                inputProps={{\n                  classes: {\n                    icon: classes.icon,\n                    outlined: classes.outlined,\n                  },\n                }}\n                inputLabelProps={{\n                  classes: {\n                    root: classes.cssLabel,\n                    className: classes.floatingLabelFocusStyle,\n                  },\n                }}\n              >\n                <MenuItem value=\"\"></MenuItem>\n                <MenuItem value={1}>1</MenuItem>\n                <MenuItem value={2}>2</MenuItem>\n                <MenuItem value={3}>3</MenuItem>\n                <MenuItem value={4}>4</MenuItem>\n                <MenuItem value={5}>5</MenuItem>\n                <MenuItem value={6}>6</MenuItem>\n                <MenuItem value={7}>7</MenuItem>\n                <MenuItem value={8}>8</MenuItem>\n                <MenuItem value={9}>9</MenuItem>\n                <MenuItem value={10}>10</MenuItem>\n                <MenuItem value={11}>11</MenuItem>\n                <MenuItem value={12}>12</MenuItem>\n                <MenuItem value={13}>13</MenuItem>\n                <MenuItem value={14}>14</MenuItem>\n                <MenuItem value={15}>15</MenuItem>\n                <MenuItem value={16}>16</MenuItem>\n                <MenuItem value={17}>17</MenuItem>\n                <MenuItem value={18}>18</MenuItem>\n                <MenuItem value={19}>19</MenuItem>\n                <MenuItem value={20}>20</MenuItem>\n                <MenuItem value={21}>21</MenuItem>\n                <MenuItem value={22}>22</MenuItem>\n                <MenuItem value={23}>23</MenuItem>\n                <MenuItem value={24}>24</MenuItem>\n                <MenuItem value={25}>25</MenuItem>\n                <MenuItem value={26}>26</MenuItem>\n                <MenuItem value={27}>27</MenuItem>\n                <MenuItem value={28}>28</MenuItem>\n                <MenuItem value={29}>29</MenuItem>\n                <MenuItem value={30}>30</MenuItem>\n                <MenuItem value={31}>31</MenuItem>\n                <MenuItem value={32}>32</MenuItem>\n                <MenuItem value={33}>33</MenuItem>\n                <MenuItem value={34}>34</MenuItem>\n                <MenuItem value={35}>35</MenuItem>\n                <MenuItem value={36}>36</MenuItem>\n                <MenuItem value={37}>37</MenuItem>\n                <MenuItem value={38}>38</MenuItem>\n                <MenuItem value={39}>39</MenuItem>\n                <MenuItem value={40}>40</MenuItem>\n                <MenuItem value={41}>41</MenuItem>\n                <MenuItem value={42}>42</MenuItem>\n                <MenuItem value={43}>43</MenuItem>\n                <MenuItem value={44}>44</MenuItem>\n                <MenuItem value={45}>45</MenuItem>\n                <MenuItem value={46}>46</MenuItem>\n                <MenuItem value={47}>47</MenuItem>\n                <MenuItem value={48}>48</MenuItem>\n                <MenuItem value={49}>49</MenuItem>\n                <MenuItem value={50}>50</MenuItem>\n                <MenuItem value={51}>51</MenuItem>\n                <MenuItem value={52}>52</MenuItem>\n                <MenuItem value={53}>53</MenuItem>\n                <MenuItem value={54}>54</MenuItem>\n                <MenuItem value={55}>55</MenuItem>\n                <MenuItem value={56}>56</MenuItem>\n                <MenuItem value={57}>57</MenuItem>\n                <MenuItem value={58}>58</MenuItem>\n                <MenuItem value={59}>59</MenuItem>\n                <MenuItem value={60}>60</MenuItem>\n                <MenuItem value={61}>61</MenuItem>\n                <MenuItem value={62}>62</MenuItem>\n                <MenuItem value={63}>63</MenuItem>\n                <MenuItem value={64}>64</MenuItem>\n                <MenuItem value={65}>65</MenuItem>\n                <MenuItem value={66}>66</MenuItem>\n                <MenuItem value={67}>67</MenuItem>\n                <MenuItem value={68}>68</MenuItem>\n                <MenuItem value={69}>69</MenuItem>\n                <MenuItem value={70}>70</MenuItem>\n                <MenuItem value={71}>71</MenuItem>\n                <MenuItem value={72}>72</MenuItem>\n                <MenuItem value={73}>73</MenuItem>\n                <MenuItem value={74}>74</MenuItem>\n                <MenuItem value={75}>75</MenuItem>\n                <MenuItem value={76}>76</MenuItem>\n                <MenuItem value={77}>77</MenuItem>\n                <MenuItem value={78}>78</MenuItem>\n                <MenuItem value={79}>79</MenuItem>\n                <MenuItem value={80}>80</MenuItem>\n                <MenuItem value={81}>81</MenuItem>\n                <MenuItem value={82}>82</MenuItem>\n                <MenuItem value={83}>83</MenuItem>\n                <MenuItem value={84}>84</MenuItem>\n                <MenuItem value={85}>85</MenuItem>\n                <MenuItem value={86}>86</MenuItem>\n                <MenuItem value={87}>87</MenuItem>\n                <MenuItem value={88}>88</MenuItem>\n                <MenuItem value={89}>89</MenuItem>\n                <MenuItem value={90}>90</MenuItem>\n                <MenuItem value={91}>91</MenuItem>\n                <MenuItem value={92}>92</MenuItem>\n                <MenuItem value={93}>93</MenuItem>\n                <MenuItem value={94}>94</MenuItem>\n                <MenuItem value={95}>95</MenuItem>\n                <MenuItem value={96}>96</MenuItem>\n                <MenuItem value={97}>97</MenuItem>\n                <MenuItem value={98}>98</MenuItem>\n                <MenuItem value={99}>99</MenuItem>\n                <MenuItem value={100}>100</MenuItem>\n              </Select>\n            </FormControl>\n            <FormControl\n              variant=\"outlined\"\n              className={classes.formControlRegistrationSelector}\n            >\n              <InputLabel\n                className={classes.categorySelector}\n                label=\"Ethnicity *\"\n              >\n                Ethnicity*\n              </InputLabel>\n              <Select\n                label=\"Ethnicity *\"\n                MenuProps={CategorySelectorProps}\n                value={this.state.ethnicity || ''}\n                onChange={this.handleInputChangeFor('ethnicity')}\n                inputProps={{\n                  classes: {\n                    icon: classes.icon,\n                    outlined: classes.outlined,\n                  },\n                }}\n                InputLabelProps={{\n                  classes: {\n                    root: classes.cssLabel,\n                    className: classes.floatingLabelFocusStyle,\n                  },\n                }}\n              >\n                <MenuItem value=\"\"></MenuItem>\n                <MenuItem value={1}>Asian - Chinese</MenuItem>\n                <MenuItem value={2}>Asian - Filipino</MenuItem>\n                <MenuItem value={3}>Asian - Asian Indian</MenuItem>\n                <MenuItem value={4}>Asian - Vietnamese</MenuItem>\n                <MenuItem value={5}>Asian - Korean</MenuItem>\n                <MenuItem value={6}>Asian - Japanese</MenuItem>\n                <MenuItem value={7}>Asian - Other Asian</MenuItem>\n                <MenuItem value={8}>Black or African American</MenuItem>\n                <MenuItem value={9}>\n                  Native Hawaiian and Pacific Islander\n                </MenuItem>\n                <MenuItem value={10}>Native Hawaiian</MenuItem>\n                <MenuItem value={11}>Pacific Islander - Samoan</MenuItem>\n                <MenuItem value={12}>Pacific Islander - Chamorro</MenuItem>\n                <MenuItem value={13}>Pacific Islander - Other</MenuItem>\n                <MenuItem value={14}>White</MenuItem>\n                <MenuItem value={15}>Some Other Race</MenuItem>\n              </Select>\n            </FormControl>\n            <FormControl\n              variant=\"outlined\"\n              className={classes.formControlRegistrationSelector}\n            >\n              <InputLabel className={classes.categorySelector} label=\"Gender *\">\n                Gender*\n              </InputLabel>\n              <Select\n                label=\"Gender *\"\n                MenuProps={CategorySelectorProps}\n                value={this.state.gender || ''}\n                onChange={this.handleInputChangeFor('gender')}\n                inputProps={{\n                  classes: {\n                    icon: classes.icon,\n                    outlined: classes.outlined,\n                  },\n                }}\n                InputLabelProps={{\n                  classes: {\n                    root: classes.cssLabel,\n                    className: classes.floatingLabelFocusStyle,\n                  },\n                }}\n              >\n                <MenuItem value=\"\"></MenuItem>\n                <MenuItem value=\"Male\">Male</MenuItem>\n                <MenuItem value=\"Female\">Female</MenuItem>\n                <MenuItem value=\"Other\">Other</MenuItem>\n                <MenuItem value=\"Prefer not to say\">Prefer not to say</MenuItem>\n              </Select>\n            </FormControl>\n            <FormControl\n              variant=\"outlined\"\n              className={classes.formControlRegistration}\n            >\n              <InputLabel className={classes.categorySelector} label=\"Income *\">\n                Income*\n              </InputLabel>\n              <Select\n                label=\"Income *\"\n                MenuProps={CategorySelectorProps}\n                value={this.state.income || ''}\n                onChange={this.handleInputChangeFor('income')}\n                inputProps={{\n                  classes: {\n                    icon: classes.icon,\n                    outlined: classes.outlined,\n                  },\n                }}\n                InputLabelProps={{\n                  classes: {\n                    root: classes.cssLabel,\n                    className: classes.floatingLabelFocusStyle,\n                  },\n                }}\n              >\n                <MenuItem value=\"\"></MenuItem>\n                <MenuItem value={1}>$0 - $10,000</MenuItem>\n                <MenuItem value={2}>10,001 - $20,000</MenuItem>\n                <MenuItem value={3}>$20,001 - $30,000</MenuItem>\n                <MenuItem value={4}>30,001 - $40,000</MenuItem>\n                <MenuItem value={5}>$40,001 - $50,000</MenuItem>\n                <MenuItem value={6}>$50,001 - $60,000</MenuItem>\n                <MenuItem value={7}>$60,001 - $70,000</MenuItem>\n                <MenuItem value={8}>$70,001 - $80,000</MenuItem>\n                <MenuItem value={9}>$80,001 - $90,000</MenuItem>\n                <MenuItem value={10}>$90,001 - $100,000</MenuItem>\n                <MenuItem value={11}>$100,000+</MenuItem>\n              </Select>\n            </FormControl>\n            <FormControl\n              variant=\"outlined\"\n              className={classes.formControlRegistrationSelector}\n            >\n              <InputLabel\n                className={classes.categorySelector}\n                label=\"Education *\"\n              >\n                Education*\n              </InputLabel>\n              <Select\n                label=\"Education *\"\n                required={true}\n                MenuProps={CategorySelectorProps}\n                value={this.state.education_level || ''}\n                onChange={this.handleInputChangeFor('education_level')}\n                inputProps={{\n                  classes: {\n                    icon: classes.icon,\n                    outlined: classes.outlined,\n                  },\n                }}\n                InputLabelProps={{\n                  classes: {\n                    root: classes.cssLabel,\n                    className: classes.floatingLabelFocusStyle,\n                  },\n                }}\n              >\n                <MenuItem value=\"\"></MenuItem>\n                <MenuItem value={1}>Some High School</MenuItem>\n                <MenuItem value={2}>High School</MenuItem>\n                <MenuItem value={3}>Certification</MenuItem>\n                <MenuItem value={4}>Some College School</MenuItem>\n                <MenuItem value={5}>Associate</MenuItem>\n                <MenuItem value={6}>Bachelor's</MenuItem>\n                <MenuItem value={7}>Master's</MenuItem>\n                <MenuItem value={8}>Doctorate</MenuItem>\n                <MenuItem value={9}>Professional</MenuItem>\n              </Select>\n            </FormControl>\n            <FormControl\n              className={\n                window.screen.width > 420\n                  ? classes.formControlRegistrationFullWidth\n                  : classes.formControlRegistrationFullWidthMobile\n              }\n            >\n              <div>\n                <TextField\n                  label=\"Registration Code\"\n                  variant=\"outlined\"\n                  className={classes.inputControl}\n                  value={this.state.reg_code || ''}\n                  onChange={this.handleInputChangeFor('reg_code')}\n                  InputLabelProps={{\n                    classes: {\n                      root: classes.cssLabel,\n                      className: classes.floatingLabelFocusStyle,\n                    },\n                  }}\n                  InputProps={{\n                    classes: {\n                      input: classes.input,\n                      root: classes.cssOutlinedInput,\n                      notchedOutline: classes.notchedOutline,\n                    },\n                  }}\n                  FormHelperTextProps={{\n                    classes: { root: classes.helperText },\n                  }}\n                />\n              </div>\n            </FormControl>\n\n            {/* Submit button */}\n            <div className={classes.submitButtonContainer}>\n              <Button\n                disableElevation\n                className={classes.submitButtonRegister}\n                onClick={this.registerUser}\n              >\n                Submit\n              </Button>\n            </div>\n\n            {/* Switch to login mode button */}\n            <Button\n              component=\"Link\"\n              className={classes.register}\n              onClick={() => {\n                this.props.dispatch({ type: 'SET_TO_LOGIN_MODE' });\n              }}\n            >\n              Login\n            </Button>\n          </form>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\n// Instead of taking everything from state, we just want the error messages.\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({errors}) => ({ errors });\nconst mapStateToProps = (state) => ({\n  errors: state.errors,\n});\n\nexport default withStyles(styles)(connect(mapStateToProps)(RegisterPage));\n","import React from 'react';\nimport {Route} from 'react-router-dom'\nimport {connect} from 'react-redux';\nimport LoginPage from '../LoginPage/LoginPage';\nimport RegisterPage from '../RegisterPage/RegisterPage';\n\n// A Custom Wrapper Component -- This will keep our code DRY.\n// Responsible for watching redux state, and returning an appropriate component\n// API for this component is the same as a regular route\n\n// THIS IS NOT SECURITY! That must be done on the server\n// A malicious user could change the code and see any view\n// so your server-side route must implement real security\n// by checking req.isAuthenticated for authentication\n// and by checking req.user for authorization\n\nconst ProtectedRoute = (props) => {\n  // Using destructuring, this takes ComponentToProtect from component\n  // prop and grabs all other props to pass them along to Route\n  const {\n    // Alias prop 'component' as 'ComponentToProtect'\n    component: ComponentToProtect,\n    user,\n    loginMode,\n    ...otherProps\n  } = props;\n\n  let ComponentToShow;\n\n  if(user.id) {\n    // if the user is logged in (only logged in users have ids)\n    // show the component that is protected\n    ComponentToShow = ComponentToProtect;\n  } else if (loginMode === 'login') {\n    // if they are not logged in, check the loginMode on Redux State\n    // if the mode is 'login', show the LoginPage\n    ComponentToShow = LoginPage;\n  } else {\n    // the the user is not logged in and the mode is not 'login'\n    // show the RegisterPage\n    ComponentToShow = RegisterPage;\n  }\n\n  // We return a Route component that gets added to our list of routes\n  return (\n      <Route\n        // all props like 'exact' and 'path' that were passed in\n        // are now passed along to the 'Route' Component\n        {...otherProps}\n        component={ComponentToShow}\n      />\n  )\n}\n\n// Instead of taking everything from state, we just want the user and loginMode\n// to determine which page we should show the user\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({ user, loginMode }) => ({ user, loginMode });\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n    loginMode: state.loginMode,\n  }\n}\n\nexport default connect(mapStateToProps)(ProtectedRoute)\n\n\n","import React from 'react';\nimport {Route} from 'react-router-dom'\nimport {connect} from 'react-redux';\n\n// A Custom Wrapper Component -- This will keep our code DRY.\n// Responsible for watching redux state, and returning an appropriate component\n// API for this component is the same as a regular route\n\n// THIS IS NOT SECURITY! That must be done on the server\n// A malicious user could change the code and see any view\n// so your server-side route must implement real security\n// by checking req.isAuthenticated for authentication\n// and by checking req.user for authorization\n\nconst AdminRoute = (props) => {\n  // Using destructuring, this takes ComponentToProtect from component\n  // prop and grabs all other props to pass them along to Route\n  const {\n    // Alias prop 'component' as 'ComponentToProtect'\n    component: ComponentToProtect,\n    user,\n    loginMode,\n    ...otherProps\n  } = props;\n\n  let ComponentToShow;\n\n  if(user.id && user.admin) {\n    // if the user is logged in (only logged in users have ids)\n    // and an admin (user.admin is a boolean)\n    // show the component that is protected\n    ComponentToShow = ComponentToProtect;\n  }\n\n  // We return a Route component that gets added to our list of routes\n  return (\n      <Route\n        // all props like 'exact' and 'path' that were passed in\n        // are now passed along to the 'Route' Component\n        {...otherProps}\n        component={ComponentToShow}\n      />\n  )\n}\n\n// Instead of taking everything from state, we just want the user and loginMode\n// to determine which page we should show the user\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({ user, loginMode }) => ({ user, loginMode });\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n    loginMode: state.loginMode,\n  }\n}\n\nexport default connect(mapStateToProps)(AdminRoute)\n\n\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nclass ScrollToTop extends React.Component {\n  componentDidUpdate(prevProps) {\n    if (\n      this.props.location.pathname !== prevProps.location.pathname\n    ) {\n      window.scrollTo(0, 0);\n    }\n  }\n\n  render() {\n    return null;\n  }\n}\n\nexport default withRouter(ScrollToTop);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport styles from '../../../../themes/adminTheme.js';\nimport {\n  withStyles,\n  Grid,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogTitle,\n} from '@material-ui/core';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport { CSVLink } from 'react-csv';\n\nclass StatisticsPage extends Component {\n  state = {\n    openCurriculum: false,\n    openDemographics: false,\n    openFeedback: false,\n  };\n\n  componentDidMount() {\n    this.props.dispatch({\n      type: 'FETCH_CURRICULUM',\n    });\n  }\n  getCurriculum = () => {\n    this.props.dispatch({ type: 'FETCH_CURRICULUM' });\n  };\n  getDemographics = () => {\n    this.props.dispatch({ type: 'FETCH_DEMOGRAPHICS' });\n  };\n  getFeedback = () => {\n    this.props.dispatch({ type: 'FETCH_FEEDBACK' });\n  };\n\n  handleSectionsClick = () => {\n    this.props.history.push(`/view-sections`);\n  };\n\n  handleRealmsClick = () => {\n    this.props.history.push(`/view-realms`);\n  };\n  handleClickOpenCurriculum = () => {\n    this.props.dispatch({ type: 'FETCH_CURRICULUM' });\n    this.setState({ openCurriculum: true });\n  };\n\n  handleCloseCurriculum = () => {\n    this.setState({ openCurriculum: false });\n  };\n  handleClickOpenDemographics = () => {\n    this.props.dispatch({ type: 'FETCH_DEMOGRAPHICS' });\n    this.setState({ openDemographics: true });\n  };\n\n  handleCloseDemographics = () => {\n    this.setState({ openDemographics: false });\n  };\n  handleClickOpenFeedback = () => {\n    this.props.dispatch({ type: 'FETCH_FEEDBACK' });\n    this.setState({ openFeedback: true });\n  };\n\n  handleCloseFeedback = () => {\n    this.setState({ openFeedback: false });\n  };\n  render() {\n    const { classes } = this.props;\n    const date = new Date().toDateString();\n\n    return (\n      <div>\n        {' '}\n        <Grid container spacing={0} alignItems=\"center\" justify=\"center\">\n          <Grid item xs={12} sm={12} md={12} lg={12}>\n            {' '}\n            <h1 className={classes.statisticsHeader} id=\"welcome\">\n              Statistics\n            </h1>\n            <Button\n              variant=\"contained\"\n              className={classes.downloadButtonExtended}\n              onClick={this.handleClickOpenCurriculum}\n            >\n              <GetAppIcon className={classes.downloadIcon} />\n              <span className={classes.paddingLR}>Curriculum</span>\n            </Button>\n            <Dialog\n              open={this.state.openCurriculum}\n              onClose={this.handleCloseCurriculum}\n            >\n              <DialogTitle className={classes.dialogContent}>\n                {'  Are you sure you want to download the curriculum?'}\n              </DialogTitle>\n              <DialogActions>\n                <Button\n                  className={classes.adminButtonDialog}\n                  onClick={this.handleCloseCurriculum}\n                  color=\"primary\"\n                >\n                  Later\n                </Button>\n                <CSVLink\n                  data={this.props.reduxState.statistics}\n                  className={classes.downloadButtonLink}\n                  target=\"_blank\"\n                  filename={'Curriculum ' + date + '.csv'}\n                >\n                  <Button\n                    onClick={this.handleCloseCurriculum}\n                    className={classes.adminButtonDialog}\n                    color=\"primary\"\n                    autoFocus\n                  >\n                    Download\n                  </Button>\n                </CSVLink>\n              </DialogActions>\n            </Dialog>\n            <Button\n              variant=\"contained\"\n              className={classes.downloadButtonExtended}\n              onClick={this.handleClickOpenDemographics}\n            >\n              <GetAppIcon className={classes.downloadIcon} />\n              <span className={classes.paddingLR}>Demographics</span>\n            </Button>\n            <Dialog\n              open={this.state.openDemographics}\n              onClose={this.handleCloseDemographics}\n            >\n              <DialogTitle className={classes.dialogContent}>\n                {'  Are you sure you want to download demographics?'}\n              </DialogTitle>\n              <DialogActions>\n                <Button\n                  className={classes.adminButtonDialog}\n                  onClick={this.handleCloseDemographics}\n                  color=\"primary\"\n                >\n                  Later\n                </Button>\n                <CSVLink\n                  data={this.props.reduxState.statistics}\n                  className={classes.downloadButtonLink}\n                  target=\"_blank\"\n                  filename={'Demographics ' + date + '.csv'}\n                >\n                  <Button\n                    onClick={this.handleCloseDemographics}\n                    className={classes.adminButtonDialog}\n                    color=\"primary\"\n                    autoFocus\n                  >\n                    Download\n                  </Button>\n                </CSVLink>\n              </DialogActions>\n            </Dialog>\n            <Button\n              variant=\"contained\"\n              className={classes.downloadButtonExtended}\n              onClick={this.handleClickOpenFeedback}\n            >\n              <GetAppIcon className={classes.downloadIcon} />\n              <span className={classes.paddingLR}>Feedback</span>\n            </Button>\n            {/* {this.props.reduxState !== undefined\n                ? JSON.stringify(this.props.reduxState)\n                : 'loading'} */}\n            <Dialog\n              open={this.state.openFeedback}\n              onClose={this.handleCloseFeedback}\n            >\n              <DialogTitle className={classes.dialogContent}>\n                {'  Are you sure you want to download user feedback?'}\n              </DialogTitle>\n              <DialogActions>\n                <Button\n                  className={classes.adminButtonDialog}\n                  onClick={this.handleCloseFeedback}\n                  color=\"primary\"\n                >\n                  Later\n                </Button>\n                <CSVLink\n                  data={this.props.reduxState.statistics}\n                  className={classes.downloadButtonLink}\n                  target=\"_blank\"\n                  filename={'User Feedback ' + date + '.csv'}\n                >\n                  <Button\n                    onClick={this.handleCloseFeedback}\n                    className={classes.adminButtonDialog}\n                    color=\"primary\"\n                    autoFocus\n                  >\n                    Download\n                  </Button>\n                </CSVLink>\n              </DialogActions>\n            </Dialog>\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nconst mapReduxStateToProps = (reduxState) => ({\n  reduxState,\n});\n\nexport default withStyles(styles)(\n  connect(mapReduxStateToProps)(StatisticsPage)\n)\n","const styles = (theme) => ({\n  welcomeMessage: {\n    font: '400 20px Poppins, sans-serif',\n    'text-align': 'center',\n    color: '#1f3556',\n    margin: '0px 0px 10px 0px',\n  },\n  exploreInvitation: {\n    font: '400 30px Poppins, sans-serif',\n    'text-align': 'center',\n    color: '#1f3556',\n    margin: '0px 0px 20px 0px',\n  },\n  GridListRoot: {\n    display: 'flex',\n    justifyContent: 'space-around',\n  },\n  gridList: {\n    width: '100%',\n    padding: '0px 20px 0px 20px',\n  },\n  gridListTile: { width: '100%' },\n  buttonContainer: { width: '95%', padding: '0px' },\n  buttonPaper: {\n    '&:hover': {\n      elevation: 10,\n    },\n  },\n  userName: { 'text-transform': 'capitalize' },\n  button: {\n    font: ' 300  16px  Poppins , sans-serif',\n    color: 'white',\n    backgroundColor: '#457b9d',\n    'text-transform': 'capitalize',\n    'text-align': 'center',\n    width: '100%',\n    'border-radius': '5px',\n    '&:hover': {\n      backgroundColor: '#a8dadc',\n      color: '#457b9d',\n    },\n    '&:focus': {\n      backgroundColor: 'a8dadc',\n      color: '#457b9d',\n    },\n  },\n  icon: {\n    marginTop: 15,\n  },\n  realmName: {\n    paddingBottom: '10px',\n  },\n});\n\nexport default styles;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  withStyles,\n  Grid,\n} from '@material-ui/core';\n\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\nimport FitnessCenterIcon from '@material-ui/icons/FitnessCenter';\nimport EcoIcon from '@material-ui/icons/Eco';\nimport PlaceIcon from '@material-ui/icons/Place';\nimport EmojiPeopleIcon from '@material-ui/icons/EmojiPeople';\nimport EmojiObjectsIcon from '@material-ui/icons/EmojiObjects';\nimport SpaIcon from '@material-ui/icons/Spa';\nimport styles from '../../themes/homeTheme';\n\n// this components just renders the icons and names of each realm for MobileHome\nclass RealmTile extends Component {\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container className={classes.buttonContainer}>\n        <Grid item className={classes.button}>\n          {this.props.iconIndex % 8 === 0 ? (\n            <EmojiEmotionsIcon className={classes.icon} />\n          ) : ( '' )}\n          {this.props.iconIndex % 8 === 1 ? (\n            <EcoIcon className={classes.icon} />\n          ) : ( '' )}\n          {this.props.iconIndex % 8 === 2 ? (\n            <FitnessCenterIcon className={classes.icon} />\n          ) : ( '' )}\n          {this.props.iconIndex % 8 === 3 ? (\n            <SpaIcon className={classes.icon} />\n          ) : ( '' )}\n          {this.props.iconIndex % 8 === 4 ? (\n            <AttachMoneyIcon className={classes.icon} />\n          ) : ( '' )}\n          {this.props.iconIndex % 8 === 5 ? (\n            <PlaceIcon className={classes.icon} />\n          ) : ( '' )}\n          {this.props.iconIndex % 8 === 6 ? (\n            <EmojiPeopleIcon className={classes.icon} />\n          ) : ( '' )}\n          {this.props.iconIndex % 8 === 7 ? (\n            <EmojiObjectsIcon className={classes.icon} />\n          ) : ( '' )}\n\n          <Grid item className={classes.realmName}>\n            {this.props.realm.realm_name}\n          </Grid>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\n// Instead of taking everything from state, we just want the user info.\nconst mapStateToProps = (state) => ({\n  user: state.user,\n});\n\n// this allows us to use <App /> in index.js\nexport default withStyles(styles)(connect(mapStateToProps)(RealmTile));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles, Grid, GridList, GridListTile } from '@material-ui/core';\n\nimport styles from '../../themes/homeTheme';\nimport RealmTile from '../RealmTile/RealmTile';\n\nclass HomeMobile extends Component {\n  componentDidMount() {\n    this.props.dispatch({ type: 'FETCH_ALL_REALMS' });\n  }\n\n  goRealm = (realmId) => this.props.history.push(`/realm-home/${realmId}`);\n\n  // this component doesn't do much to start, just renders some user info to the DOM\n  render() {\n    const { classes } = this.props;\n    return (\n      <div>\n        {this.props.realms[0] !== undefined ? (\n          <>\n            <Grid\n              container\n              spacing={0}\n              direction=\"column\"\n              alignItems=\"center\"\n              justify=\"center\"\n            >\n              <Grid item xs={12} sm={12} md={4} lg={4}>\n                <h1 className={classes.welcomeMessage} id=\"welcome\">\n                  Hello{' '}\n                  <span className={classes.userName}>\n                    {this.props.username}\n                  </span>\n                  ,\n                </h1>\n                <h3 className={classes.exploreInvitation}>Explore a Realm.</h3>\n                {/* TABLE OF REALMS */}\n                <Grid className={classes.GridListRoot}>\n                  <GridList\n                    cols={2}\n                    cellHeight={90}\n                    className={classes.gridList}\n                  >\n                    {this.props.realms.map((realm, index) => (\n                      <GridListTile\n                        key={index}\n                        onClick={() => this.goRealm(realm.id)}\n                        className={classes.gridListTile}\n                      >\n                        <RealmTile realm={realm} iconIndex={index} />\n                      </GridListTile>\n                    ))}\n                  </GridList>\n                </Grid>{' '}\n                {/* End of Table of Realms */}\n              </Grid>\n            </Grid>\n          </>\n        ) : (\n          ''\n        )}\n      </div>\n    );\n  }\n}\n\n// Instead of taking everything from state, we just want the user info.\nconst mapStateToProps = (state) => ({\n  realms: state.allRealms,\n  username: state.user.username,\n});\n\n// this allows us to use <App /> in index.js\nexport default withStyles(styles)(connect(mapStateToProps)(HomeMobile));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport styles from '../../../../themes/adminTheme.js';\nimport {\n  withStyles,\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Paper,\n  IconButton,\n} from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport ImageIcon from '@material-ui/icons/Image';\nimport YouTubeIcon from '@material-ui/icons/YouTube';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nclass ViewSectionsPage extends Component {\n  componentDidMount = () => {\n    this.getAllSections();\n  };\n\n  getAllSections = () => {\n    this.props.dispatch({ type: 'FETCH_ALL_SECTIONS' });\n  };\n\n  handleClick = (sectionId) => {\n    this.props.history.push(`preview/section/${sectionId}`);\n  };\n\n  handleNewSectionClick = () => {\n    this.props.history.push(`/add-section`);\n  };\n  handleDeleteSectionClick = (sectionId) => {\n    // console.log('delete was clicked!', sectionId);\n    this.props.dispatch({\n      type: 'DELETE_SECTION',\n      payload: sectionId,\n    });\n  };\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div>\n        <center>\n          <h1 className={classes.headerView}>Sections</h1>\n          {/* {JSON.stringify(this.props.sections)} */}\n          <div>\n            <Button\n              variant=\"contained\"\n              id=\"submit-new-section-btn\"\n              className={classes.adminButtonPreview}\n              onClick={this.handleNewSectionClick}\n            >\n              <AddIcon className={classes.addSectionViewIcon} /> New Section\n            </Button>\n          </div>\n\n          <Paper className={classes.paperView}>\n            <Table className={classes.table}>\n              <TableHead>\n                <TableRow>\n                  <TableCell\n                    align=\"left\"\n                    width=\"40%%\"\n                    className={classes.tableHeader}\n                  >\n                    Name\n                  </TableCell>\n                  <TableCell\n                    align=\"left\"\n                    width=\"20%\"\n                    className={classes.tableHeader}\n                  >\n                    Type\n                  </TableCell>\n                  <TableCell\n                    align=\"left\"\n                    width=\"20%\"\n                    className={classes.tableHeader}\n                  ></TableCell>\n                  <TableCell width=\"15%\"></TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {this.props.sections.map((section) => (\n                  <TableRow key={section.id}>\n                    <TableCell\n                      className={classes.tableCell}\n                      align=\"left\"\n                      component=\"th\"\n                      scope=\"row\"\n                    >\n                      {section.title}\n                    </TableCell>\n                    <TableCell align=\"left\">\n                      {section.type_name === 'image' ? (\n                        <ImageIcon className={classes.addSectionResourceIcon} />\n                      ) : (\n                        ''\n                      )}\n                      {section.type_name === 'video' ? (\n                        <YouTubeIcon\n                          className={classes.addSectionResourceIcon}\n                        />\n                      ) : (\n                        ''\n                      )}\n                      {section.type_name === 'text' ? (\n                        <DescriptionIcon\n                          className={classes.addSectionResourceIcon}\n                        />\n                      ) : (\n                        ''\n                      )}\n                    </TableCell>{' '}\n                    <TableCell>\n                      <IconButton\n                        variant=\"contained\"\n                        size=\"large\"\n                        onClick={() => this.handleClick(section.id)}\n                        aria-label=\"delete\"\n                        className={classes.viewSectionIcon}\n                      >\n                        <VisibilityIcon fontSize=\"large\" />\n                      </IconButton>\n                    </TableCell>\n                    <TableCell>\n                      <IconButton\n                        variant=\"contained\"\n                        size=\"large\"\n                        aria-label=\"delete\"\n                        className={classes.viewSectionDeleteIcon}\n                        onClick={(event) =>\n                          this.handleDeleteSectionClick(section.id)\n                        }\n                      >\n                        <DeleteIcon fontSize=\"large\" />\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </Paper>\n        </center>\n      </div>\n    );\n  }\n}\n\nViewSectionsPage.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nconst mapReduxStateToProps = (reduxState) => ({\n  sections: reduxState.allSections,\n});\n\nexport default connect(mapReduxStateToProps)(\n  withStyles(styles)(ViewSectionsPage)\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles, TextField } from '@material-ui/core/';\n\nimport styles from '../../../../themes/adminTheme.js';\n\nclass SectionQuestions extends Component {\n  state = {\n    question: '',\n    question_index: this.props.index,\n  };\n\n  handleQuestionChange = (event) => {\n    // console.log('old state:', this.state);\n    let newValue = event.target.value;\n    this.setState({\n      ...this.state,\n      question: newValue,\n    });\n\n    this.props.dispatch({\n      type: 'UPDATE_QUESTIONS',\n      payload: {\n        question: newValue,\n        question_index: this.state.question_index,\n      },\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <>\n        {/* QUESTION TYPE (ETC.)\n\n        {/* SECTION DESCRIPTION */}\n        <div>\n          <TextField\n            required\n            label=\"Question\"\n            helperText=\"character limit: 140\"\n            inputProps={{ maxLength: 140 }}\n            variant=\"outlined\"\n            className={classes.inputControlQuestion}\n            value={this.props.local[`question${this.props.index}`]}\n            onChange={this.props.changeHandler(`question${this.props.index}`)}\n            InputLabelProps={{\n              classes: {\n                root: classes.cssLabel,\n                className: classes.floatingLabelFocusStyle,\n              },\n            }}\n            InputProps={{\n              classes: {\n                input: classes.input,\n                root: classes.cssOutlinedInput,\n                notchedOutline: classes.notchedOutline,\n              },\n            }}\n            FormHelperTextProps={{\n              classes: { root: classes.helperText },\n            }}\n          />\n        </div>\n      </>\n    );\n  }\n}\n\nSectionQuestions.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nconst mapReduxStateToProps = (reduxState) => ({\n  reduxState,\n});\n\nexport default withStyles(styles)(\n  connect(mapReduxStateToProps)(SectionQuestions)\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport SectionQuestion from '../../components/SectionQuestions/SectionQuestions';\nimport {\n  withStyles,\n  FormControl,\n  Grid,\n  TextField,\n  Button,\n  MenuItem,\n} from '@material-ui/core';\nimport styles from '../../../../themes/adminTheme.js';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Fade from 'react-reveal/Fade';\nconst type = [\n  {\n    value: 2,\n    label: 'Text',\n  },\n  {\n    value: 1,\n    label: 'Video',\n  },\n  {\n    value: 3,\n    label: 'Image',\n  },\n];\n\nclass AddNewSectionPage extends Component {\n  state = {\n    title: '',\n    type: '',\n    description: '',\n    imageLink: '',\n    videoLink: '',\n    questions: {},\n    textContent: '',\n    qmap: [],\n    preview: false,\n  };\n\n  //Packaging new section details and sending to saga to send to database\n  submitSection = (event) => {\n    event.preventDefault();\n    // console.log('this.state:', this.state);\n    this.props.dispatch({\n      type: 'SUBMIT_SECTION',\n      payload: {\n        ...this.state,\n      },\n    });\n    this.props.history.push('/view-sections');\n  };\n\n  handleInputChangeFor = (propertyName) => (event) => {\n    // console.log('old state:', this.state);\n    this.setState({\n      ...this.state,\n      [propertyName]: event.target.value,\n    });\n  };\n\n  handleQuestionChange = (propertyName) => (event) => {\n    // console.log('old state:', this.state);\n    this.setState({\n      ...this.state,\n      questions: {\n        ...this.state.questions,\n        [propertyName]: event.target.value,\n      },\n    });\n  };\n\n  appendNewQuestion = () => {\n    // console.log('You clicked add new questions');\n    this.setState({\n      qmap: [...this.state.qmap, this.state.qmap.length],\n    });\n  };\n  toggleResourcePreview = () => {\n    // console.log('You clicked the preview icon');\n    this.setState({\n      preview: !this.state.preview,\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div>\n        <Grid container spacing={0} alignItems=\"center\" justify=\"center\">\n          <Grid item xs={12} sm={12} md={6} lg={6}>\n            <form>\n              <h1 className={classes.header}>New Section</h1>\n              <FormControl className={classes.formContainer}>\n                <div>\n                  <TextField\n                    required\n                    label=\"Section Name\"\n                    helperText=\"character limit: 30\"\n                    inputProps={{ maxLength: 30 }}\n                    variant=\"outlined\"\n                    className={classes.inputControl}\n                    value={this.state.title}\n                    onChange={this.handleInputChangeFor('title')}\n                    InputLabelProps={{\n                      classes: {\n                        root: classes.cssLabel,\n                        className: classes.floatingLabelFocusStyle,\n                      },\n                    }}\n                    InputProps={{\n                      classes: {\n                        input: classes.input,\n                        root: classes.cssOutlinedInput,\n                        notchedOutline: classes.notchedOutline,\n                      },\n                    }}\n                    FormHelperTextProps={{\n                      classes: { root: classes.helperText },\n                    }}\n                  />\n                </div>\n              </FormControl>\n              <FormControl className={classes.formContainer}>\n                <div>\n                  <TextField\n                    select\n                    required\n                    label=\"Resource Type\"\n                    helperText=\"\"\n                    variant=\"outlined\"\n                    className={classes.inputControl}\n                    value={this.state.type}\n                    onChange={this.handleInputChangeFor('type')}\n                    InputLabelProps={{\n                      classes: {\n                        root: classes.cssLabel,\n                        className: classes.floatingLabelFocusStyle,\n                      },\n                    }}\n                    InputProps={{\n                      classes: {\n                        input: classes.input,\n                        root: classes.cssOutlinedInput,\n                        notchedOutline: classes.notchedOutline,\n                      },\n                    }}\n                    FormHelperTextProps={{\n                      classes: { root: classes.helperText },\n                    }}\n                  >\n                    {' '}\n                    {type.map((option) => (\n                      <MenuItem key={option.value} value={option.value}>\n                        {option.label}\n                      </MenuItem>\n                    ))}\n                  </TextField>\n                </div>\n              </FormControl>\n\n              {/* 1=video, 2=text, 3=image */}\n              {this.state.type === 1 ? (\n                <FormControl className={classes.formContainer}>\n                  <div>\n                    <TextField\n                      required\n                      label=\"Video Link\"\n                      type=\"text\"\n                      helperText=\"\"\n                      variant=\"outlined\"\n                      className={classes.inputControlLink}\n                      value={this.state.videoLink}\n                      onChange={this.handleInputChangeFor('videoLink')}\n                      InputLabelProps={{\n                        classes: {\n                          root: classes.cssLabel,\n                          className: classes.floatingLabelFocusStyle,\n                        },\n                      }}\n                      InputProps={{\n                        classes: {\n                          input: classes.input,\n                          root: classes.cssOutlinedInput,\n                          notchedOutline: classes.notchedOutline,\n                        },\n                      }}\n                      FormHelperTextProps={{\n                        classes: { root: classes.helperText },\n                      }}\n                    />\n                    {this.state.videoLink !== '' ? (\n                      <VisibilityIcon\n                        onClick={this.toggleResourcePreview}\n                        className={\n                          this.state.preview\n                            ? classes.clickedPreview\n                            : classes.preview\n                        }\n                      />\n                    ) : (\n                      <VisibilityIcon className={classes.grayPreview} />\n                    )}\n                  </div>\n\n                  {this.state.preview && this.state.videoLink !== '' ? (\n                    <FormControl className={classes.formContainerVideo}>\n                      {' '}\n                      <Fade>\n                        <h1 className={classes.previewTitle}>\n                          Resource Preview\n                        </h1>\n                        <div className={classes.sectionVideoContainer}>\n                          <iframe\n                            title={'section video'}\n                            frameborder=\"0\"\n                            className={classes.sectionVideo}\n                            // src=\"https://www.youtube.com/embed/pRFXSjkpKWA\"\n                            src={\n                              this.state.videoLink\n                                .replace('watch?v=', 'embed/')\n                                .split('&feature=emb_title')[0]\n                            }\n                            // https://www.youtube.com/watch?v=pRFXSjkpKWA&feature=emb_title\n                          ></iframe>\n                        </div>{' '}\n                      </Fade>\n                    </FormControl>\n                  ) : (\n                    <></>\n                  )}\n                  {/* <div>{JSON.stringify()} </div> */}\n                </FormControl>\n              ) : this.state.type === 2 ? (\n                <div>\n                  <FormControl className={classes.formContainer}>\n                    <div>\n                      <TextField\n                        required\n                        label=\"Text Content\"\n                        helperText=\"\"\n                        variant=\"outlined\"\n                        multiline\n                        rows={18}\n                        className={classes.inputControlTextContent}\n                        value={this.state.textContent}\n                        onChange={this.handleInputChangeFor('textContent')}\n                        InputLabelProps={{\n                          classes: {\n                            root: classes.cssLabel,\n                            className: classes.floatingLabelFocusStyle,\n                          },\n                        }}\n                        InputProps={{\n                          classes: {\n                            input: classes.input,\n                            root: classes.cssOutlinedInput,\n                            notchedOutline: classes.notchedOutline,\n                          },\n                        }}\n                        FormHelperTextProps={{\n                          classes: { root: classes.helperText },\n                        }}\n                      />\n                    </div>\n                  </FormControl>\n                </div>\n              ) : this.state.type === 3 ? (\n                <div>\n                  <FormControl className={classes.formContainer}>\n                    <div>\n                      <TextField\n                        required\n                        label=\"Image Link\"\n                        helperText=\"\"\n                        variant=\"outlined\"\n                        className={classes.inputControlLink}\n                        value={this.state.imageLink}\n                        onChange={this.handleInputChangeFor('imageLink')}\n                        InputLabelProps={{\n                          classes: {\n                            root: classes.cssLabel,\n                            className: classes.floatingLabelFocusStyle,\n                          },\n                        }}\n                        InputProps={{\n                          classes: {\n                            input: classes.input,\n                            root: classes.cssOutlinedInput,\n                            notchedOutline: classes.notchedOutline,\n                          },\n                        }}\n                        FormHelperTextProps={{\n                          classes: { root: classes.helperText },\n                        }}\n                      />\n                      {this.state.imageLink !== '' ? (\n                        <VisibilityIcon\n                          onClick={this.toggleResourcePreview}\n                          className={\n                            this.state.preview\n                              ? classes.clickedPreview\n                              : classes.preview\n                          }\n                        />\n                      ) : (\n                        <VisibilityIcon className={classes.grayPreview} />\n                      )}\n                    </div>\n                  </FormControl>\n                  {this.state.preview && this.state.imageLink !== '' ? (\n                    <FormControl className={classes.formContainerVideo}>\n                      <Fade>\n                        <h1 className={classes.previewTitle}>\n                          Resource Preview\n                        </h1>\n                        <div className={classes.sectionImageContainer}>\n                          <div>\n                            <img\n                              className={classes.sectionImage}\n                              src={this.state.imageLink}\n                              alt=\"resource preview\"\n                            />\n                          </div>\n                        </div>\n                      </Fade>\n                    </FormControl>\n                  ) : (\n                    <></>\n                  )}\n                </div>\n              ) : (\n                <></>\n              )}\n\n              <FormControl className={classes.formContainer}>\n                <TextField\n                  required\n                  label=\"Resource Description\"\n                  helperText=\"\"\n                  variant=\"outlined\"\n                  multiline\n                  rows={9}\n                  className={classes.inputControlContentDescription}\n                  value={this.state.description}\n                  onChange={this.handleInputChangeFor('description')}\n                  InputLabelProps={{\n                    classes: {\n                      root: classes.cssLabel,\n                      className: classes.floatingLabelFocusStyle,\n                    },\n                  }}\n                  InputProps={{\n                    classes: {\n                      input: classes.input,\n                      root: classes.cssOutlinedInput,\n                      notchedOutline: classes.notchedOutline,\n                    },\n                  }}\n                  FormHelperTextProps={{\n                    classes: { root: classes.helperText },\n                  }}\n                />\n              </FormControl>\n\n              <div className=\"new-question\">\n                <FormControl className={classes.formContainerQuestion}>\n                  {this.state.qmap.map((qmap, index) => (\n                    <SectionQuestion\n                      key={index}\n                      index={index}\n                      local={this.state.questions}\n                      changeHandler={this.handleQuestionChange}\n                    />\n                  ))}\n                </FormControl>\n              </div>\n              <div className={classes.adminButtonContainer}>\n                <Button\n                  variant=\"contained\"\n                  onClick={this.appendNewQuestion}\n                  className={classes.adminButton}\n                >\n                  Add Question\n                </Button>\n\n                <Button\n                  variant=\"contained\"\n                  type=\"submit\"\n                  name=\"submit\"\n                  onClick={this.submitSection}\n                  className={classes.adminButton}\n                >\n                  Save Section\n                </Button>\n              </div>\n            </form>\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nAddNewSectionPage.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nconst mapReduxStateToProps = (reduxState) => ({\n  reduxState,\n});\n\nexport default withStyles(styles)(\n  connect(mapReduxStateToProps)(AddNewSectionPage)\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport styles from '../../../../themes/adminTheme.js';\nimport { withStyles, Grid, Typography } from '@material-ui/core';\n\nclass PreviewSectionPage extends Component {\n  componentDidMount() {\n    this.props.dispatch({\n      type: 'FETCH_SECTION',\n      payload: {\n        sectionId: this.props.match.params.id, //hard-coded, needs to be changed this.props.match.params.section\n      },\n    });\n  }\n\n  render() {\n    const { classes, section } = this.props;\n\n    return (\n      <div>\n        <h1 className={classes.headerView}>Preview</h1>\n        {section.title !== undefined ? (\n          <p className={classes.sectionTitle}>\n            {' '}\n            (Name)\n            <div className={classes.headerLess}>{section.title}</div> <br></br>\n            <br></br>{' '}\n          </p>\n        ) : (\n          'loading'\n        )}\n        (Content)<br></br>\n        <br></br>\n        <Grid>\n          {section.video_link !== undefined && section.type === 1 ? (\n            <Grid className={classes.sectionVideoContainer}>\n              <iframe\n                  title={section.title + ' video'}\n                  frameborder=\"0\"\n                  className={classes.sectionVideo}\n                  src={\n                    section.video_link.includes('youtube')\n                      ? section.video_link.replace('/watch?v=', '/embed/')\n                      : section.video_link.includes('ted.com/')\n                      ? section.video_link.replace(\n                          '//www.ted.com/',\n                          '//embed.ted.com/'\n                        )\n                      : 'invalid video source: only youtube and ted.com are supported'\n                  }\n                />\n            </Grid>\n          ) : (\n            ''\n          )}\n        </Grid>\n        {section.text_content !== undefined && section.type === 2 ? (\n          <Typography className={classes.sectionDescription}>\n            {section.text_content}\n          </Typography>\n        ) : (\n          ''\n        )}\n        {section.image_link !== undefined && section.type === 3 ? (\n          <Grid className={classes.sectionCoverContainer}>\n            <img\n              className={classes.realmCover}\n              src={section.image_link}\n              alt={section.title + ' image'}\n            />\n          </Grid>\n        ) : (\n          ''\n        )}\n        {section.description !== undefined ? (\n          <p className={classes.sectionDescription}>\n            (Description)\n            <br></br>\n            <br></br>\n            {section.description}\n          </p>\n        ) : (\n          'null'\n        )}\n        <p className={classes.sectionDescription}>\n          (Questions)\n          <br></br>\n        </p>\n        {section.questions !== undefined\n          ? section.questions.map((q) => <p>{q.content}</p>)\n          : 'null'}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  section: state.section,\n});\n\nexport default withRouter(\n  withStyles(styles)(connect(mapStateToProps)(PreviewSectionPage))\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {\n  withStyles,\n  FormControl,\n  Grid,\n  TextField,\n  Button,\n} from '@material-ui/core';\nimport styles from '../../../../themes/adminTheme.js';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Fade from 'react-reveal/Fade';\n\nclass EditSection extends Component {\n  state = {\n    sectionId: this.props.section.id,\n    title: this.props.section.title,\n    type: this.props.section.type,\n    description: this.props.section.description,\n    imageLink: this.props.section.image_link,\n    videoLink: this.props.section.video_link,\n    questions: this.props.section.questions,\n    textContent: this.props.section.text_content,\n    preview: false,\n  };\n\n  //Packaging new section details and sending to saga to send to database\n  changeSection = (event) => {\n    event.preventDefault();\n\n    this.props.dispatch({\n      type: 'UPDATE_QUESTIONS',\n      payload: {\n        changedQuestions:\n          this.state.changedQuestions === undefined\n            ? null\n            : this.state.changedQuestions,\n      },\n    });\n\n    this.props.dispatch({\n      type: 'CHANGE_SECTION',\n      payload: {\n        ...this.state,\n      },\n    });\n  }; // end changeSection\n\n  handleInputChangeFor = (propertyName) => (event) => {\n    this.setState({\n      ...this.state,\n      [propertyName]: event.target.value,\n    });\n    // console.log('state:', this.state);\n  };\n\n  handleQuestionChangeFor = (propertyName) => (event) => {\n    this.setState({\n      ...this.state,\n      changedQuestions: {\n        ...this.state.changedQuestions,\n        [propertyName]: event.target.value,\n      },\n    });\n    // console.log('state:', this.state);\n  };\n\n  appendNewQuestion = () => {\n    this.props.dispatch({\n      type: 'UPDATE_QUESTIONS',\n      payload: {\n        sectionId: this.state.sectionId,\n        changedQuestions:\n          this.state.changedQuestions === undefined\n            ? null\n            : this.state.changedQuestions,\n      },\n    });\n    this.props.dispatch({\n      type: 'ADD_SINGLE_QUESTION',\n      payload: {\n        sectionId: this.state.sectionId,\n        qIndex: this.state.questions.length,\n      },\n    });\n    // console.log('You clicked add new questions');\n  };\n  toggleResourcePreview = () => {\n    // console.log('You clicked the preview icon');\n    this.setState({\n      preview: !this.state.preview,\n    });\n  };\n\n  render() {\n    const { classes, section } = this.props;\n    return (\n      <div>\n        <Grid container spacing={0} alignItems=\"center\" justify=\"center\">\n          <Grid item xs={12} sm={12} md={12} lg={12}>\n            <h1 className={classes.header}>Edit Section</h1>\n            <div className=\"form\">\n              <form>\n                {/* SECTION TITLE */}\n                <div>\n                  <FormControl className={classes.formContainer}>\n                    <div>\n                      <TextField\n                        required\n                        label=\"Section Name\"\n                        helperText=\"character limit: 30\"\n                        type=\"text\"\n                        defaultValue={section.title}\n                        inputProps={{ maxLength: 30 }}\n                        variant=\"outlined\"\n                        onChange={this.handleInputChangeFor('title')}\n                        className={classes.inputControl}\n                        InputLabelProps={{\n                          classes: {\n                            root: classes.cssLabel,\n                            className: classes.floatingLabelFocusStyle,\n                          },\n                        }}\n                        InputProps={{\n                          classes: {\n                            input: classes.input,\n                            root: classes.cssOutlinedInput,\n                            notchedOutline: classes.notchedOutline,\n                          },\n                        }}\n                        FormHelperTextProps={{\n                          classes: { root: classes.helperText },\n                        }}\n                      />\n                    </div>\n                  </FormControl>\n                </div>\n\n                {/* DYNAMIC INFORMATION SECTION */}\n                {/* 1=video, 2=text, 3=image */}\n                {/* type needs to be retrieved from the database */}\n                <Fade>\n                  {section.type === 1 ? (\n                    <Fade>\n                      <FormControl className={classes.formContainer}>\n                        <div>\n                          <TextField\n                            required\n                            label=\"Video Link\"\n                            type=\"text\"\n                            helperText=\"\"\n                            variant=\"outlined\"\n                            className={classes.inputControlLink}\n                            defaultValue={section.video_link}\n                            onChange={this.handleInputChangeFor('videoLink')}\n                            InputLabelProps={{\n                              classes: {\n                                root: classes.cssLabel,\n                                className: classes.floatingLabelFocusStyle,\n                              },\n                            }}\n                            InputProps={{\n                              classes: {\n                                input: classes.input,\n                                root: classes.cssOutlinedInput,\n                                notchedOutline: classes.notchedOutline,\n                              },\n                            }}\n                            FormHelperTextProps={{\n                              classes: { root: classes.helperText },\n                            }}\n                          />\n                          {this.state.videoLink !== '' ? (\n                            <VisibilityIcon\n                              onClick={this.toggleResourcePreview}\n                              className={\n                                this.state.preview\n                                  ? classes.clickedPreview\n                                  : classes.preview\n                              }\n                            />\n                          ) : (\n                            <VisibilityIcon className={classes.grayPreview} />\n                          )}\n                        </div>\n\n                        {this.state.preview && this.state.videoLink !== '' ? (\n                          <FormControl className={classes.formContainerVideo}>\n                            {' '}\n                            <Fade>\n                              <h1 className={classes.previewTitle}>\n                                Resource Preview\n                              </h1>\n                              <div className={classes.sectionVideoContainer}>\n                                <iframe\n                                  title={'section video'}\n                                  frameborder=\"0\"\n                                  className={classes.sectionVideo}\n                                  // src=\"https://www.youtube.com/embed/pRFXSjkpKWA\"\n                                  src={\n                                    this.state.videoLink\n                                      .replace('watch?v=', 'embed/')\n                                      .split('&feature=emb_title')[0]\n                                  }\n                                  // https://www.youtube.com/watch?v=pRFXSjkpKWA&feature=emb_title\n                                ></iframe>\n                              </div>{' '}\n                            </Fade>\n                          </FormControl>\n                        ) : (\n                          <></>\n                        )}\n                        {/* <div>{JSON.stringify()} </div> */}\n                      </FormControl>\n                    </Fade>\n                  ) : section.type === 2 ? (\n                    <div>\n                      <Fade>\n                        <FormControl className={classes.formContainer}>\n                          <div>\n                            <TextField\n                              required\n                              label=\"Text Content\"\n                              helperText=\"\"\n                              variant=\"outlined\"\n                              multiline\n                              rows={18}\n                              className={classes.inputControlTextContent}\n                              defaultValue={section.text_content}\n                              //   value={this.state.textContent}\n                              onChange={this.handleInputChangeFor(\n                                'textContent'\n                              )}\n                              InputLabelProps={{\n                                classes: {\n                                  root: classes.cssLabel,\n                                  className: classes.floatingLabelFocusStyle,\n                                },\n                              }}\n                              InputProps={{\n                                classes: {\n                                  input: classes.input,\n                                  root: classes.cssOutlinedInput,\n                                  notchedOutline: classes.notchedOutline,\n                                },\n                              }}\n                              FormHelperTextProps={{\n                                classes: { root: classes.helperText },\n                              }}\n                            />\n                          </div>\n                        </FormControl>\n                      </Fade>\n                    </div>\n                  ) : section.type === 3 ? (\n                    <div>\n                      <Fade>\n                        <FormControl className={classes.formContainer}>\n                          <div>\n                            <TextField\n                              required\n                              label=\"Image Link\"\n                              helperText=\"\"\n                              variant=\"outlined\"\n                              className={classes.inputControlLink}\n                              defaultValue={section.image_link}\n                              onChange={this.handleInputChangeFor('imageLink')}\n                              InputLabelProps={{\n                                classes: {\n                                  root: classes.cssLabel,\n                                  className: classes.floatingLabelFocusStyle,\n                                },\n                              }}\n                              InputProps={{\n                                classes: {\n                                  input: classes.input,\n                                  root: classes.cssOutlinedInput,\n                                  notchedOutline: classes.notchedOutline,\n                                },\n                              }}\n                              FormHelperTextProps={{\n                                classes: { root: classes.helperText },\n                              }}\n                            />\n                            {this.state.imageLink !== '' ? (\n                              <VisibilityIcon\n                                onClick={this.toggleResourcePreview}\n                                className={\n                                  this.state.preview\n                                    ? classes.clickedPreview\n                                    : classes.preview\n                                }\n                              />\n                            ) : (\n                              <VisibilityIcon className={classes.grayPreview} />\n                            )}\n                          </div>\n                        </FormControl>\n                      </Fade>\n                      {this.state.preview && this.state.imageLink !== '' ? (\n                        <FormControl className={classes.formContainerVideo}>\n                          <Fade>\n                            <h1 className={classes.previewTitle}>\n                              Resource Preview\n                            </h1>\n                            <div className={classes.sectionCoverContainer}>\n                              <div>\n                                <img\n                                  className={classes.sectionImage}\n                                  src={this.state.imageLink}\n                                  alt=\"resource preview\"\n                                />\n                              </div>\n                            </div>\n                          </Fade>\n                        </FormControl>\n                      ) : (\n                        <></>\n                      )}\n                    </div>\n                  ) : (\n                    <></>\n                  )}\n                </Fade>\n                {/* SECTION DESCRIPTION */}\n                <div>\n                  <FormControl className={classes.formContainer}>\n                    <TextField\n                      required\n                      label=\"Resource Description\"\n                      helperText=\"\"\n                      variant=\"outlined\"\n                      multiline\n                      rows={9}\n                      className={classes.inputControlContentDescription}\n                      // value={this.state.description}\n                      defaultValue={section.description}\n                      onChange={this.handleInputChangeFor('description')}\n                      InputLabelProps={{\n                        classes: {\n                          root: classes.cssLabel,\n                          className: classes.floatingLabelFocusStyle,\n                        },\n                      }}\n                      InputProps={{\n                        classes: {\n                          input: classes.input,\n                          root: classes.cssOutlinedInput,\n                          notchedOutline: classes.notchedOutline,\n                        },\n                      }}\n                      FormHelperTextProps={{\n                        classes: { root: classes.helperText },\n                      }}\n                    />\n                  </FormControl>\n                </div>\n                <br />\n                {/*  <------ space hardcoded for now */}\n                <div>\n                  {section.questions !== undefined\n                    ? section.questions.map((q) => (\n                        <FormControl className={classes.formContainer}>\n                          <TextField\n                            required\n                            label=\"Resource Question\"\n                            helperText=\"\"\n                            variant=\"outlined\"\n                            defaultValue={q.content}\n                            onChange={this.handleQuestionChangeFor(`q${q.id}`)}\n                            InputLabelProps={{\n                              classes: {\n                                root: classes.cssLabel,\n                                className: classes.floatingLabelFocusStyle,\n                              },\n                            }}\n                            InputProps={{\n                              classes: {\n                                input: classes.input,\n                                root: classes.cssOutlinedInput,\n                                notchedOutline: classes.notchedOutline,\n                              },\n                            }}\n                            FormHelperTextProps={{\n                              classes: { root: classes.helperText },\n                            }}\n                          />\n                        </FormControl>\n                      ))\n                    : ''}\n                </div>\n\n                {/* ADD NEW QUESTION BUTTON */}\n                <div className={classes.adminButtonContainer}>\n                  <Button\n                    variant=\"contained\"\n                    onClick={this.appendNewQuestion}\n                    className={classes.adminButtonAdd}\n                  >\n                    Add Question\n                  </Button>\n\n                  <Button\n                    variant=\"contained\"\n                    type=\"submit\"\n                    name=\"submit\"\n                    onClick={this.changeSection}\n                    className={classes.adminButtonAdd}\n                  >\n                    Save Section\n                  </Button>\n                </div>\n              </form>\n            </div>\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nEditSection.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  section: state.section,\n});\n\nexport default withStyles(styles)(connect(mapStateToProps)(EditSection));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport PreviewSection from '../../components/PreviewSection/PreviewSection';\nimport EditSection from '../../components/EditSection/EditSection';\nimport styles from '../../../../themes/adminTheme.js';\nimport { withStyles, Grid, Button } from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\n\nclass PreviewSectionPage extends Component {\n  state = {\n    edit: false,\n  };\n\n  toggleEdit = () => {\n    this.setState({\n      edit: !this.state.edit,\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div>\n        <Grid container spacing={0} alignItems=\"center\" justify=\"center\">\n          <Grid item xs={12} sm={12} md={5} lg={5}>\n            <center>\n              {!this.state.edit ? (\n                <div>\n                  <PreviewSection />\n                  <Button\n                    variant=\"contained\"\n                    id=\"submit-new-section-btn\"\n                    className={classes.adminButtonPreview}\n                    onClick={this.toggleEdit}\n                  >\n                    <EditIcon className={classes.editSectionPreviewIcon} />\n                    Section\n                  </Button>\n                </div>\n              ) : (\n                <div>\n                  <EditSection />\n\n                  <Button\n                    variant=\"contained\"\n                    id=\"submit-new-section-btn\"\n                    className={classes.adminButtonAddMarginLess}\n                    onClick={this.toggleEdit}\n                  >\n                    <VisibilityIcon\n                      className={classes.previewSectionPreviewIcon}\n                    />\n                    Section\n                  </Button>\n                </div>\n              )}\n            </center>\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nconst mapReduxStateToProps = (reduxState) => ({\n  user: reduxState.user,\n  reduxState,\n});\n\n// this allows us to use <App /> in index.js\nexport default connect(mapReduxStateToProps)(\n  withStyles(styles)(PreviewSectionPage)\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport styles from '../../../../themes/adminTheme.js';\nimport { withStyles } from '@material-ui/core';\n\nclass PreviewRealmPage extends Component {\n  componentDidMount() {\n    this.props.dispatch({\n      type: 'FETCH_REALM',\n      payload: {\n        realmId: this.props.match.params.id, //hard-coded, needs to be changed this.props.match.params.section\n      },\n    });\n  }\n\n  render() {\n    const { classes, realm } = this.props;\n\n    return (\n      <div>\n        <h1 className={classes.headerView}>Preview</h1>\n        {/* {this.props.reduxState !== undefined\n          ? JSON.stringify(this.props.reduxState)\n          : 'loading'} */}\n        {realm.realm_name !== undefined ? (\n          <p className={classes.sectionTitle}>\n            {' '}\n            (Name)\n            <div className={classes.headerLess}>{realm.realm_name}</div>{' '}\n          </p>\n        ) : (\n          'loading'\n        )}\n        <br></br>\n\n        <br></br>\n        <div className={classes.sectionCoverContainer}>\n          (Cover Photo)\n          <br></br>\n          <br></br>\n          <img\n            className={classes.sectionImage}\n            src={realm.cover_photo}\n            alt={realm.realm_name + ' image'}\n          />\n        </div>\n\n        <br></br>\n        {realm.description !== undefined ? (\n          <p className={classes.sectionDescription}>\n            (Description)\n            <br></br>\n            <br></br>\n            {realm.description}\n          </p>\n        ) : (\n          'null'\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  realm: state.realm,\n});\n\nexport default withRouter(\n  withStyles(styles)(connect(mapStateToProps)(PreviewRealmPage))\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport PreviewRealm from '../../components/PreviewRealm/PreviewRealm';\nimport styles from '../../../../themes/adminTheme.js';\nimport { withStyles, Grid, Button } from '@material-ui/core';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\n\nclass PreviewRealmPage extends Component {\n  state = {\n    edit: true,\n  };\n\n  toggleEdit = () => {\n    this.setState({\n      edit: !this.state.edit,\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div>\n        <Grid container spacing={0} alignItems=\"center\" justify=\"center\">\n          <Grid item xs={12} sm={12} md={5} lg={5}>\n            <center>\n              {this.state.edit ? (\n                <div>\n                  <PreviewRealm />\n                  <Link\n                    to=\"/view-realms\"\n                    className={classes.downloadButtonLink}\n                  >\n                    <Button\n                      variant=\"contained\"\n                      className={classes.adminButtonAdd}\n                    >\n                      Back to Realms\n                    </Button>\n                  </Link>\n                </div>\n              ) : (\n                <div>\n                  <Button\n                    variant=\"contained\"\n                    id=\"submit-new-section-btn\"\n                    className={classes.adminButtonPreviewAgain}\n                    onClick={this.toggleEdit}\n                  >\n                    <VisibilityIcon\n                      className={classes.previewSectionPreviewIcon}\n                    />\n                    Realm\n                  </Button>\n                </div>\n              )}\n            </center>\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nconst mapReduxStateToProps = (reduxState) => ({\n  user: reduxState.user,\n  reduxState,\n});\n\n// this allows us to use <App /> in index.js\nexport default connect(mapReduxStateToProps)(\n  withStyles(styles)(PreviewRealmPage)\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {\n  withStyles,\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Paper,\n  IconButton,\n} from '@material-ui/core';\nimport styles from '../../../../themes/adminTheme.js';\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\n\nclass ViewRealmsPage extends Component {\n  componentDidMount = () => {\n    this.getAllRealms();\n  };\n\n  getAllRealms = () => {\n    this.props.dispatch({ type: 'FETCH_ALL_REALMS' });\n  };\n\n  handleClick = (realmId) => {\n    this.props.history.push(`/preview/realm/${realmId}`);\n  };\n\n  handleDeleteClick = (realmId) => {\n    this.props.dispatch({ type: 'DELETE_REALM', payload: realmId });\n  };\n\n  handleNewRealmClick = () => {\n    this.props.history.push(`/add-realm`);\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div>\n        <center>\n          <h1 className={classes.headerView}>Realms</h1>\n          <div>\n            <Button\n              variant=\"contained\"\n              id=\"submit-new-section\"\n              className={classes.adminButtonPreview}\n              classes={{ root: classes.button }}\n              onClick={this.handleNewRealmClick}\n            >\n              <AddIcon className={classes.addSectionViewIcon} /> New Realm\n            </Button>\n          </div>\n\n          <Paper className={classes.paperViewRealm}>\n            <Table className={classes.table}>\n              <TableHead>\n                <TableRow>\n                  <TableCell\n                    align=\"left\"\n                    width=\"30%\"\n                    className={classes.tableHeader}\n                  >\n                    Realm Name\n                  </TableCell>\n                  <TableCell\n                    width=\"10%\"\n                    align=\"right\"\n                    className={classes.tableHeader}\n                  ></TableCell>\n                  <TableCell\n                    width=\"10%\"\n                    align=\"right\"\n                    className={classes.tableHeader}\n                  ></TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {this.props.realms.map((realm) => (\n                  <TableRow key={this.props.realms.id}>\n                    <TableCell\n                      align=\"left\"\n                      // scope=\"row\"\n                      className={classes.tableCell}\n                    >\n                      {realm.realm_name}\n                    </TableCell>\n                    <TableCell>\n                      <IconButton\n                        variant=\"contained\"\n                        aria-label=\"preview\"\n                        className={classes.viewSectionIcon}\n                        onClick={() => this.handleClick(realm.id)}\n                      >\n                        <VisibilityIcon fontSize=\"large\" />\n                      </IconButton>\n                    </TableCell>\n                    <TableCell>\n                      <IconButton\n                        variant=\"contained\"\n                        size=\"large\"\n                        aria-label=\"delete\"\n                        className={classes.viewSectionDeleteIcon}\n                        onClick={() => this.handleDeleteClick(realm.id)}\n                      >\n                        <DeleteIcon fontSize=\"large\" />\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </Paper>\n        </center>\n      </div>\n    );\n  }\n}\n\nViewRealmsPage.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nconst mapReduxStateToProps = (reduxState) => ({\n  realms: reduxState.allRealms,\n});\n\nexport default connect(mapReduxStateToProps)(\n  withStyles(styles)(ViewRealmsPage)\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles, TextField } from '@material-ui/core/';\nimport styles from '../../../../themes/adminTheme.js';\n\nclass RealmQuestions extends Component {\n  state = {\n    question: '',\n    question_index: this.props.index,\n  };\n\n  handleQuestionChange = (event) => {\n    // console.log('old state:', this.state);\n    let newValue = event.target.value;\n    this.setState({\n      ...this.state,\n      question: newValue,\n    });\n\n    this.props.dispatch({\n      type: 'UPDATE_QUESTIONS',\n      payload: {\n        question: newValue,\n        question_index: this.state.question_index,\n      },\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div>\n        <TextField\n          required\n          label=\"Question\"\n          helperText=\"character limit: 140\"\n          inputProps={{ maxLength: 140 }}\n          variant=\"outlined\"\n          className={classes.inputControlQuestion}\n          value={this.props.local[`q${this.props.index}`]}\n          onChange={this.props.changeHandler(`q${this.props.index}`)}\n          InputLabelProps={{\n            classes: {\n              root: classes.cssLabel,\n              className: classes.floatingLabelFocusStyle,\n            },\n          }}\n          InputProps={{\n            classes: {\n              input: classes.input,\n              root: classes.cssOutlinedInput,\n              notchedOutline: classes.notchedOutline,\n            },\n          }}\n          FormHelperTextProps={{\n            classes: { root: classes.helperText },\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nRealmQuestions.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nconst mapReduxStateToProps = (reduxState) => ({\n  reduxState,\n});\n\nexport default withStyles(styles)(\n  connect(mapReduxStateToProps)(RealmQuestions)\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport RealmQuestion from '../../components/RealmQuestions/RealmQuestions';\nimport styles from '../../../../themes/adminTheme.js';\nimport {\n  withStyles,\n  FormControl,\n  Grid,\n  TextField,\n  Button,\n} from '@material-ui/core';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\n\nimport Fade from 'react-reveal/Fade';\n\nclass AddNewRealmPage extends Component {\n  state =\n    this.props.state.realm.name === undefined\n      ? {\n          name: '',\n          photoLink: '', //https://assets.entrepreneur.com/content/3x2/2000/1596647278-GettyImages-168491057.jpg?width=700&crop=2:1\n          description: '',\n          preview: false,\n          questionInputs: [],\n          icon: '',\n        }\n      : this.props.state.realm;\n  // Be wary of constructors, they can over ride info\n\n  populateNewRealmInputs = () => {\n    this.setState({\n      name: 'Financial',\n      photoLink:\n        'https://assets.entrepreneur.com/content/3x2/2000/1596647278-GettyImages-168491057.jpg?width=700&crop=2:1',\n      description:\n        'Understanding how financial wellness is interconnected with our other realms of wellness is the first step to gain a better relationship with money. In this realm we will learn how to create a responsible relationship with money, that both your current and future self will appreciate!',\n    });\n  };\n  //Store new realm in a reducer\n  storeRealm = (event) => {\n    this.props.dispatch({\n      type: 'SET_REALM',\n      payload: {\n        ...this.state,\n      },\n    });\n    this.goNext();\n  };\n\n  //Navigate to next page\n  goNext = () => this.props.history.push('/add-sections-to-realm');\n\n  //CAPTURE INPUTS IN STATE\n\n  handleInputChangeFor = (propertyName) => (event) => {\n    this.setState({\n      ...this.state,\n      [propertyName]: event.target.value,\n    });\n    // console.log('state:', this.state);\n  };\n\n  handleQuestionChangeFor = (propertyName) => (event) => {\n    this.setState({\n      ...this.state,\n      questions: {\n        ...this.state.questions,\n        [propertyName]: event.target.value,\n      },\n    });\n    // console.log('state:', this.state);\n  };\n\n  appendNewQuestion = () => {\n    // console.log('You clicked add new questions');\n    this.setState({\n      ...this.state,\n      questions:\n        this.state.questions === undefined ? {} : { ...this.state.questions },\n      questionInputs: [...this.state.questionInputs, 'bob'],\n    });\n  };\n\n  toggleCoverPreview = () => {\n    // console.log('You clicked the preview icon');\n    this.setState({\n      preview: !this.state.preview,\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <>\n        <Grid container spacing={0} alignItems=\"center\" justify=\"center\">\n          <Grid item xs={12} sm={12} md={6} lg={6}>\n            <form>\n              <h1\n                className={classes.header}\n                onClick={this.populateNewRealmInputs}\n              >\n                New Realm\n              </h1>\n\n              <FormControl className={classes.formContainer}>\n                <div>\n                  <TextField\n                    required\n                    label=\"Realm Name\"\n                    helperText=\"character limit: 15\"\n                    variant=\"outlined\"\n                    inputProps={{ maxLength: 15 }}\n                    className={classes.inputControl}\n                    value={this.state.name}\n                    onChange={this.handleInputChangeFor('name')}\n                    InputLabelProps={{\n                      classes: {\n                        root: classes.cssLabel,\n                        className: classes.floatingLabelFocusStyle,\n                      },\n                    }}\n                    InputProps={{\n                      classes: {\n                        input: classes.input,\n                        root: classes.cssOutlinedInput,\n                        notchedOutline: classes.notchedOutline,\n                      },\n                    }}\n                    FormHelperTextProps={{\n                      classes: { root: classes.helperText },\n                    }}\n                  />\n                </div>\n              </FormControl>\n\n              <div>\n                <FormControl className={classes.formContainer}>\n                  <div>\n                    <TextField\n                      required\n                      label=\"Realm Cover Photo Link\"\n                      helperText=\"\"\n                      variant=\"outlined\"\n                      className={classes.inputControlLink}\n                      value={this.state.photoLink}\n                      onChange={this.handleInputChangeFor('photoLink')}\n                      InputLabelProps={{\n                        classes: {\n                          root: classes.cssLabel,\n                          className: classes.floatingLabelFocusStyle,\n                        },\n                      }}\n                      InputProps={{\n                        classes: {\n                          input: classes.input,\n                          root: classes.cssOutlinedInput,\n                          notchedOutline: classes.notchedOutline,\n                        },\n                      }}\n                      FormHelperTextProps={{\n                        classes: { root: classes.helperText },\n                      }}\n                    />\n                    {this.state.photoLink !== '' ? (\n                      <VisibilityIcon\n                        onClick={this.toggleCoverPreview}\n                        className={\n                          this.state.preview\n                            ? classes.clickedPreview\n                            : classes.preview\n                        }\n                      />\n                    ) : (\n                      <VisibilityIcon className={classes.grayPreview} />\n                    )}\n                  </div>\n                </FormControl>\n\n                {this.state.preview && this.state.photoLink !== '' ? (\n                  <FormControl className={classes.formContainerVideo}>\n                    <Fade>\n                      <h1 className={classes.previewTitle}>\n                        Cover Photo Preview\n                      </h1>\n                      <div className={classes.sectionImageContainer}>\n                        <div>\n                          <img\n                            className={classes.sectionImage}\n                            src={this.state.photoLink}\n                            alt=\"content\"\n                          />\n                        </div>\n                      </div>\n                    </Fade>\n                  </FormControl>\n                ) : (\n                  <></>\n                )}\n              </div>\n\n              <FormControl className={classes.formContainer}>\n                <div>\n                  <TextField\n                    required\n                    label=\"Realm Description\"\n                    helperText=\"\"\n                    variant=\"outlined\"\n                    multiline\n                    rows={9}\n                    className={classes.inputControlContentDescription}\n                    value={this.state.description}\n                    onChange={this.handleInputChangeFor('description')}\n                    InputLabelProps={{\n                      classes: {\n                        root: classes.cssLabel,\n                        className: classes.floatingLabelFocusStyle,\n                      },\n                    }}\n                    InputProps={{\n                      classes: {\n                        input: classes.input,\n                        root: classes.cssOutlinedInput,\n                        notchedOutline: classes.notchedOutline,\n                      },\n                    }}\n                    FormHelperTextProps={{\n                      classes: { root: classes.helperText },\n                    }}\n                  />\n                </div>\n              </FormControl>\n\n              {/* WHERE NEW QUESTION INPUTS GO */}\n\n              {/* ADD NEW QUESTION BUTTON */}\n              <div className=\"new-question\">\n                <FormControl className={classes.formContainerQuestion}>\n                  <div id=\"new-question\">\n                    {this.state.questionInputs.map((q, i) => (\n                      <Grid\n                        item\n                        component={RealmQuestion}\n                        index={i}\n                        local={this.state.questions}\n                        changeHandler={this.handleQuestionChangeFor}\n                        key={i}\n                      />\n                    ))}\n                  </div>\n                </FormControl>\n              </div>\n              <div className={classes.adminButtonContainer}>\n                <Button\n                  variant=\"contained\"\n                  onClick={this.appendNewQuestion}\n                  className={classes.adminButton}\n                >\n                  Add Question\n                </Button>\n\n                <Button\n                  variant=\"contained\"\n                  type=\"submit\"\n                  name=\"submit\"\n                  onClick={this.storeRealm}\n                  className={classes.adminButton}\n                >\n                  Select Sections for Realm\n                </Button>\n              </div>\n            </form>\n          </Grid>\n        </Grid>\n      </>\n    );\n  }\n}\n\nAddNewRealmPage.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  state,\n});\n\nexport default withStyles(styles)(connect(mapStateToProps)(AddNewRealmPage));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {\n  withStyles,\n  TableCell,\n  TableRow,\n  IconButton,\n} from '@material-ui/core';\nimport styles from '../../../../themes/adminTheme.js';\nimport ImageIcon from '@material-ui/icons/Image';\nimport YouTubeIcon from '@material-ui/icons/YouTube';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport AddIcon from '@material-ui/icons/Add';\n\nclass SectionToChoose extends Component {\n  addchosen = (section) => (event) => {\n    // console.log('addchosen clicked', section);\n    this.props.dispatch({ type: 'ADD_CHOSEN', payload: section });\n    this.props.dispatch({\n      type: 'REMOVE_SECTION_ALLSECTIONS',\n      payload: section,\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <TableRow>\n        <TableCell\n          align=\"left\"\n          component=\"th\"\n          scope=\"row\"\n          className={classes.tableCell}\n        >\n          {this.props.section.title}\n        </TableCell>\n        <TableCell className={classes.tableCell} align=\"left\">\n          {this.props.section.type_name === 'image' ? (\n            <ImageIcon className={classes.addSectionResourceIcon} />\n          ) : (\n            ''\n          )}\n          {this.props.section.type_name === 'video' ? (\n            <YouTubeIcon className={classes.addSectionResourceIcon} />\n          ) : (\n            ''\n          )}\n          {this.props.section.type_name === 'text' ? (\n            <DescriptionIcon className={classes.addSectionResourceIcon} />\n          ) : (\n            ''\n          )}\n        </TableCell>\n        <TableCell align=\"right\">\n          <IconButton\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"large\"\n            onClick={this.addchosen(this.props.section)}\n            aria-label=\"delete\"\n            className={classes.addSectionResourceIcon}\n          >\n            <AddIcon fontSize=\"large\" />\n          </IconButton>\n        </TableCell>\n      </TableRow>\n    );\n  }\n}\n\nconst mapReduxStateToProps = (reduxState) => ({\n  sections: reduxState.allSections,\n  chosenSections: reduxState.chosenSections,\n});\n\nSectionToChoose.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(\n  connect(mapReduxStateToProps)(SectionToChoose)\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {\n  withStyles,\n  TableCell,\n  TableRow,\n  IconButton,\n} from '@material-ui/core';\nimport ImageIcon from '@material-ui/icons/Image';\nimport YouTubeIcon from '@material-ui/icons/YouTube';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport styles from '../../../../themes/adminTheme.js';\nimport RemoveIcon from '@material-ui/icons/Remove';\n\n// This component renders the table of chosen sections for AddSectionsToNewRealm\nclass ChosenSection extends Component {\n  removechosen = (section) => (event) => {\n    // console.log('addchosen clicked', section);\n    this.props.dispatch({ type: 'ADD_SECTION_ALLSECTIONS', payload: section });\n    this.props.dispatch({ type: 'REMOVE_CHOSEN', payload: section });\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <TableRow>\n        <TableCell\n          align=\"left\"\n          component=\"th\"\n          scope=\"row\"\n          className={classes.tableCell}\n        >\n          {this.props.section.title}\n        </TableCell>\n        <TableCell className={classes.tableCellType} align=\"left\">\n          {this.props.section.type_name === 'image' ? (\n            <ImageIcon className={classes.addSectionResourceIcon} />\n          ) : (\n            ''\n          )}\n          {this.props.section.type_name === 'video' ? (\n            <YouTubeIcon className={classes.addSectionResourceIcon} />\n          ) : (\n            ''\n          )}\n          {this.props.section.type_name === 'text' ? (\n            <DescriptionIcon className={classes.addSectionResourceIcon} />\n          ) : (\n            ''\n          )}\n        </TableCell>\n        <TableCell align=\"right\">\n          <IconButton\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"large\"\n            onClick={this.removechosen(this.props.section)}\n            aria-label=\"delete\"\n            className={classes.margin}\n          >\n            <RemoveIcon\n              fontSize=\"large\"\n              className={classes.removeSectionResourceIcon}\n            />\n          </IconButton>\n        </TableCell>\n      </TableRow>\n    );\n  }\n}\n\nconst mapReduxStateToProps = (reduxState) => ({\n  sections: reduxState.allSections,\n  chosenSections: reduxState.chosenSections,\n});\n\nChosenSection.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(connect(mapReduxStateToProps)(ChosenSection));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {\n  withStyles,\n  Button,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n} from '@material-ui/core';\nimport styles from '../../../../themes/adminTheme.js';\nimport SectionToChoose from '../../components/SectionToChoose/SectionToChoose';\nimport ChosenSection from '../../components/ChosenSection/ChosenSection';\n\nclass AddSectionsToNewRealmPage extends Component {\n  componentDidMount = () => {\n    this.getAllSections();\n  };\n\n  getAllSections = () => {\n    this.props.dispatch({ type: 'FETCH_ALL_SECTIONS' });\n  };\n\n  submitRealmWithSections = () => {\n    this.props.dispatch({\n      type: 'POST_NEW_REALM',\n      payload: {\n        chosenSections: this.props.chosenSections,\n        realm: this.props.realm,\n      },\n    });\n    this.forwardviewRealm();\n  };\n\n  backtoAddRealm = () => {\n    this.props.history.push('/add-realm');\n  };\n\n  forwardviewRealm = () => {\n    this.props.history.push('/view-realms');\n  };\n\n  render() {\n    const { classes } = this.props;\n    // console.log('rendering');\n    return (\n      <div>\n        <center>\n          <h1 className={classes.headerMore}>Add Sections to New Realm</h1>\n\n          <h1 className={classes.headerLesser}>All Sections</h1>\n          <h3 className={classes.headerLeast}>\n            (Select sections in the order you wish to see them)\n          </h3>\n          <Paper className={classes.paperView}>\n            <Table className={classes.table}>\n              <TableHead>\n                <TableRow>\n                  <TableCell\n                    align=\"left\"\n                    width=\"30%\"\n                    className={classes.tableHeader}\n                  >\n                    Name\n                  </TableCell>\n                  <TableCell\n                    align=\"left\"\n                    width=\"30%\"\n                    className={classes.tableHeader}\n                  >\n                    Type\n                  </TableCell>\n                  <TableCell width=\"10%\"></TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {/* CURRENTLY MAPPING ROWS FROM ABOVE */}\n                {this.props.sections.map((section) => (\n                  <SectionToChoose key={section.id} section={section} />\n                ))}\n              </TableBody>\n            </Table>\n          </Paper>\n          <br></br>\n          <h2 className={classes.headerLesser}>Chosen Sections</h2>\n          <h3 className={classes.headerLeast}>\n            (Sections will appear from top to bottom)\n          </h3>\n          <Paper className={classes.paperView}>\n            <Table className={classes.table}>\n              <TableHead>\n                <TableRow>\n                  <TableCell\n                    align=\"left\"\n                    width=\"30%\"\n                    className={classes.tableHeader}\n                  >\n                    Name\n                  </TableCell>\n                  <TableCell\n                    align=\"left\"\n                    width=\"30%\"\n                    className={classes.tableHeader}\n                  >\n                    Type\n                  </TableCell>\n                  <TableCell width=\"10%\"></TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {this.props.chosenSections.map((section) => (\n                  <ChosenSection key={section.id} section={section} />\n                ))}\n              </TableBody>\n            </Table>\n          </Paper>\n          <div className={classes.adminButtonContainer}>\n            <Button\n              variant=\"contained\"\n              type=\"submit\"\n              name=\"submit\"\n              className={classes.adminButtonAdd}\n              onClick={this.backtoAddRealm}\n            >\n              Back to Name Realm\n            </Button>\n            <Button\n              variant=\"contained\"\n              type=\"submit\"\n              name=\"submit\"\n              className={classes.adminButtonAdd}\n              onClick={this.submitRealmWithSections}\n            >\n              Save Realm with Sections\n            </Button>\n          </div>\n        </center>\n      </div>\n    );\n  }\n}\n\nconst mapReduxStateToProps = (reduxState) => ({\n  sections: reduxState.allSections,\n  chosenSections: reduxState.chosenSections,\n  realm: reduxState.realm,\n});\n\nAddSectionsToNewRealmPage.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(\n  connect(mapReduxStateToProps)(AddSectionsToNewRealmPage)\n);\n","const styles = (theme) => ({\n  realmCoverContainer: {\n    'text-align': 'center',\n    width: '100%',\n    height: '100%',\n    position: 'relative',\n  },\n  realmCover: {\n    'text-align': 'center',\n    width: '92%',\n    'border-radius': '7px',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    paddingBottom: '-10px',\n  },\n  realmTitle: {\n    font: '400 20px Poppins, sans-serif',\n    color: '#1f3556',\n    padding: '0px 0px 0px 0px',\n    'text-align': 'center',\n  },\n  realmDescription: {\n    font: '300 12px Poppins, sans-serif',\n    color: '#1f3556',\n    padding: '0px 10% 0px 10%',\n    margin: '-1% 0px 0px 0px',\n    'text-align': 'left',\n  },\n  realmTableofContent: {\n    padding: '0px 10% 0px 10%',\n    margin: '5% 0px 2% 0px',\n  },\n  realmTableofContentTitle: {\n    font: '400 22px Poppins, sans-serif',\n    color: '#1f3556',\n    margin: '0px 0px 5px 0px',\n    'text-align': 'center',\n  },\n  realmTableofContentSectionContainer: {\n    display: 'flex',\n    font: '500 10px Poppins, sans-serif',\n    color: '#1f3556',\n    padding: '5px 0px 10px 0px',\n    margin: '0px 0px 10px 0px',\n    borderBottom: '#1f3556 solid 1px',\n    'text-align': 'left',\n    width: '100%',\n    '&:hover > div': {\n      color: '#457b9d',\n    },\n  },\n  realmTableofContentSection: {\n    font: '400 14px Poppins, sans-serif',\n    color: '#1f3556',\n    padding: '0px 0px 0px 0px',\n    margin: '5px 0px 0px 0px',\n    'text-align': 'left',\n    width: '90%',\n    display: 'inline-block',\n  },\n  realmTableofContentSectionIcon: {\n    font: '400 10px Poppins, sans-serif',\n    color: '#1f3556',\n    display: 'inline-block',\n  },\n  realmButton: {\n    font: '300 14px Poppins, sans-serif',\n    backgroundColor: '#1f3556',\n    color: '#fff',\n    'border-radius': '25px',\n    width: '70%',\n    padding: '10px 0px 10px 0px',\n    margin: '0px 2% 4% 2%',\n    'text-transform': 'capitalize',\n    '&:hover': {\n      backgroundColor: '#457b9d',\n    },\n  },\n  realmButtonContainer: {\n    padding: '5px 0px 10px 0px',\n    margin: '5% 0px -100% 0px',\n    width: '100%',\n    'text-align': 'center',\n  },\n  formButtonContainer: {\n    padding: '5px 0px 0px 0px',\n    margin: '20% 0px 40% 0px',\n    width: '100%',\n    'text-align': 'center',\n  },\n  inputControlTextArea: {\n    margin: '0px 0px 0px 0px',\n    padding: '0px 0px 0px 0px',\n    width: '60%',\n    font: '300 10px Poppins, sans-serif',\n    color: '#fff',\n  },\n  notchedOutline: {\n    borderWidth: '2px',\n    borderColor: '#1f3556 !important',\n    color: '#1f3556 !important',\n  },\n  cssOutlinedInput: {\n    color: '#1f3556',\n    borderColor: `#1f3556 !important`,\n    '&$cssSelected $notchedOutline': {\n      backgroundColor: '#a8dadc',\n      borderColor: `#1f3556 !important`,\n    },\n  },\n  input: {\n    color: '#1f3556',\n    borderColor: `#1f3556 !important`,\n    padding: '10px 5px 10px 5px',\n  },\n  formDescriptionContainer: {\n    width: '85%',\n    margin: 'auto',\n    borderTop: '#1f3556 solid 1px',\n    paddingTop: '15px',\n    borderBottom: '#1f3556 solid 1px',\n  },\n  formDescriptionContainerThankYou: {\n    width: '85%',\n    margin: 'auto',\n    borderTop: '#1f3556 solid 1px',\n    paddingTop: '15px',\n    paddingBottom: '10px',\n    borderBottom: '#1f3556 solid 1px',\n  },\n  formDescription: {\n    font: '300 14px Poppins, sans-serif',\n    color: '#1f3556',\n    padding: '0px 10% 0px 5%',\n    margin: '-1% 0px 0px 0px',\n    width: '90%',\n    'text-align': 'left',\n  },\n  boldTOC: { font: '500 13px Poppins, sans-serif' },\n  estimatedTimeOfCompletion: {\n    font: '300 14px Poppins, sans-serif',\n    color: '#1f3556',\n    padding: '0px 10% 0px 5%',\n    width: '90%',\n    'text-align': 'left',\n  },\n  formContainer: { 'text-align': 'center', width: '100%' },\n  formContainerSection: { 'text-align': 'center', width: '100%' },\n  QandAContainer: { 'text-align': 'center', margin: '0px 0px 0px 0px' },\n  QandAContainerSection: { margin: '-30px 0px 20px 0px' },\n  formQuestion: {\n    font: '300 14px Poppins, sans-serif',\n    color: '#1f3556',\n    padding: '0px 10% 0px 10%',\n    margin: '10% 0px 0px 0px',\n    'text-align': 'center',\n  },\n  inputControl: {\n    margin: '0px 0px 0px 0px',\n    padding: '0px 0px 0px 0px',\n    width: '60%',\n    font: '300 10px Poppins, sans-serif',\n    color: '#fff',\n  },\n  sectionTitle: {\n    font: '400 14px Poppins, sans-serif',\n    color: '#1f3556',\n    margin: '-15px 0px 20px 0px',\n    padding: '0px 15px 0px 15px',\n    'text-align': 'center',\n  },\n  sectionOrder: {\n    font: '500 14px Poppins, sans-serif',\n    padding: '0px 0px 0px 5px',\n  },\n  sectionCoverContainer: {\n    'text-align': 'center',\n    width: '100%',\n    height: '100%',\n    position: 'relative',\n    marginBottom: '20px',\n  },\n  sectionVideoContainer: {\n    margin: 'auto auto auto auto',\n    position: 'relative',\n    overflow: 'hidden',\n    'padding-bottom': '56.25%',\n    'padding-top': '30px',\n  },\n  sectionVideo: {\n    'text-align': 'center',\n    margin: 'auto',\n    width: '90%',\n    height: '90%',\n    'border-radius': '5px',\n    top: 0,\n    left: 0,\n    right: 0,\n    position: 'absolute',\n  },\n\n  inputControlSection: {\n    margin: '0px 0px 0px 0px',\n    padding: '0px 0px 0px 0px',\n    width: '70%',\n    font: '300 10px Poppins, sans-serif',\n    color: '#fff',\n  },\n  sectionDescription: {\n    font: '300 13px Poppins, sans-serif',\n    color: '#1f3556',\n    margin: 'auto',\n    padding: '0px 5px 25px 5px',\n    width: '80%',\n    'text-align': 'left',\n    borderBottom: '#1f3556 solid 2px',\n  },\n  sectionQuestion: {\n    font: '400 120% Poppins, sans-serif',\n    color: '#1f3556',\n    padding: '0px 15% 0px 15%',\n    margin: '10% 0px 10px 0px',\n    'text-align': 'center',\n  },\n  sectionQuestionRealmFeedback: {\n    font: '400 93% Poppins, sans-serif',\n    color: '#1f3556',\n    padding: '0px 7% 0px 7%',\n    margin: '10% 0px 10px 0px',\n    'text-align': 'center',\n  },\n  sectionRadio: {\n    font: '400 120% Poppins, sans-serif',\n    color: '#1f3556',\n    width: '60%',\n    'text-align': 'center',\n    margin: '7% 21% 5% 21%',\n  },\n  radioContainer: { position: 'relative', margin: 'auto' },\n  sectionRadioIcon: { color: 'blue' },\n  icon: {\n    borderRadius: '50%',\n    width: 20,\n    height: 20,\n    boxShadow:\n      'inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)',\n    backgroundColor: '#f5f8fa',\n    backgroundImage:\n      'linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))',\n    '$root.Mui-focusVisible &': {\n      outline: '2px auto rgba(19,124,189,.6)',\n      outlineOffset: 2,\n    },\n    'input:hover ~ &': {\n      backgroundColor: '#ebf1f5',\n    },\n    'input:disabled ~ &': {\n      boxShadow: 'none',\n      background: 'rgba(206,217,224,.5)',\n    },\n  },\n  checkedIcon: {\n    backgroundColor: '#457b9d',\n    backgroundImage:\n      'linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))',\n    '&:before': {\n      display: 'block',\n      width: 20,\n      height: 20,\n      backgroundImage: 'radial-gradient(#fff,#fff 28%,transparent 32%)',\n      content: '\"\"',\n    },\n    'input:hover ~ &': {\n      backgroundColor: '#106ba3',\n    },\n  },\n  ratingIcon: {\n    'font-size': '150%',\n    margin: '0px -40px 0px -40px',\n  },\n  sectionRadioButtonLabel: {\n    font: '400 90% Poppins, sans-serif',\n    margin: '0px 0px 0px 0px',\n  },\n  bottomNav: {\n    width: '100%',\n    bottom: 10,\n    position: 'absolute',\n    'text-align': 'center',\n  },\n});\n\nexport default styles;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  FormControl,\n  withStyles,\n  TextField,\n  Typography,\n} from '@material-ui/core';\nimport styles from '../../themes/realmHomeTheme';\n\nclass Question extends Component {\n  render() {\n    // Deconstructing more props\n    const { classes, question } = this.props;\n    return (\n      <>\n        <FormControl className={classes.formContainerSection}>\n          <div className={classes.QandAContainerSection}>\n            <div className={classes.sectionQuestion}>\n              <Typography>{question.content}</Typography>\n            </div>\n            <br></br>\n            <TextField\n              id=\"standard-name\"\n              label=\"Answer\"\n              type=\"text\"\n              multiline\n              className={classes.inputControlSection}\n              value={this.props.local[`answer${question.id}`]}\n              onChange={this.props.changeHandler(`answer${question.id}`)}\n              margin=\"normal\"\n            />{' '}\n          </div>\n        </FormControl>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n});\n\n// this allows us to use <App /> in index.js\nexport default withStyles(styles)(connect(mapStateToProps)(Question));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Question from '../Question/Question';\nimport styles from '../../themes/realmHomeTheme';\nimport { withStyles, Grid, Button, Typography } from '@material-ui/core';\n\nclass Section extends Component {\n  state = {};\n\n  handleInputChangeFor = (propertyName) => (event) => {\n    // console.log('old state:', this.state);\n    this.setState({\n      ...this.state,\n      [propertyName]: event.target.value,\n    });\n  };\n\n  componentDidMount() {\n    this.props.dispatch({\n      type: 'FETCH_SECTION',\n      payload: {\n        sectionId: this.props.match.params.section,\n      },\n    });\n    this.props.dispatch({\n      type: 'FETCH_REALM',\n      payload: {\n        realmId: this.props.match.params.realm,\n      },\n    });\n    this.props.dispatch({\n      type: 'UPDATE_PROGRESS',\n      payload: {\n        realmId: this.props.match.params.realm,\n        sectionId: this.props.match.params.section,\n      },\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.match.params.section !== prevProps.match.params.section) {\n      this.props.dispatch({\n        type: 'FETCH_SECTION',\n        payload: {\n          sectionId: this.props.match.params.section,\n        },\n      });\n      this.props.dispatch({\n        type: 'FETCH_REALM',\n        payload: {\n          realmId: this.props.match.params.realm,\n        },\n      });\n      this.props.dispatch({\n        type: 'UPDATE_PROGRESS',\n        payload: {\n          realmId: this.props.match.params.realm,\n          sectionId: this.props.match.params.section,\n        },\n      });\n    }\n  }\n  // this.forceUpdate();\n\n  saveAndContinue = () => {\n    // window.scroll({\n    //   top: 0,\n    //   left: 0,\n    //   behavior: 'smooth',\n    // });\n    this.props.dispatch({\n      type: 'SUBMIT_RESPONSE',\n      payload: {\n        state: this.state,\n        realmId: this.props.match.params.realm,\n        sectionId: this.props.match.params.section,\n      },\n    });\n\n    const section_order = this.props.realm.section;\n    let next_section = -1;\n\n    // loop through the section order array\n    for (let i = 0; i < section_order.length; i++) {\n      // if there is still a section after this one\n      if (\n        section_order[i].section_id === parseInt(this.props.match.params.section) &&\n        i + 1 < section_order.length\n      ) {\n        next_section = section_order[i + 1].section_id;\n      }\n    }\n\n    if (next_section === -1) {\n      this.props.history.push(\n        `/realm-feedback/${this.props.match.params.realm}`\n      );\n    } else {\n      this.props.history.push(\n        `/section/${this.props.match.params.realm}/${next_section}`\n      );\n    }\n  };\n\n  saveAndReturn = () => {\n    this.props.dispatch({\n      type: 'SAVE_SECTION',\n      payload: {\n        state: this.state,\n        realmId: this.props.match.params.realm,\n        sectionId: this.props.match.params.section,\n      },\n    });\n    this.props.history.push(`/realm-home/${this.props.match.params.realm}`);\n  };\n\n  render() {\n    const { classes, section } = this.props;\n    return (\n      <Grid container spacing={0} alignItems=\"center\" justify=\"center\">\n        <Grid item xs={12} sm={12} md={6} lg={6}>\n          {section.title !== undefined ? (\n            <h3 className={classes.sectionTitle}>{section.title}</h3>\n          ) : (\n            'loading'\n          )}\n\n          <Grid>\n            {section.video_link !== undefined && section.type === 1 ? (\n              <Grid className={classes.sectionVideoContainer}>\n                <iframe\n                  title={section.title + ' video'}\n                  frameborder=\"0\"\n                  className={classes.sectionVideo}\n                  src={\n                    section.video_link.includes('youtube')\n                      ? section.video_link.replace('/watch?v=', '/embed/')\n                      : section.video_link.includes('ted.com/')\n                      ? section.video_link.replace(\n                          '//www.ted.com/',\n                          '//embed.ted.com/'\n                        )\n                      : 'invalid video source: only youtube and ted.com are supported'\n                  }\n                />\n              </Grid>\n            ) : (\n              ''\n            )}\n          </Grid>\n          {section.text_content !== undefined && section.type === 2 ? (\n            <Typography className={classes.sectionDescription}>\n              {section.text_content}\n            </Typography>\n          ) : (\n            ''\n          )}\n          {section.image_link !== undefined && section.type === 3 ? (\n            <Grid className={classes.sectionCoverContainer}>\n              <img\n                className={classes.realmCover}\n                src={section.image_link}\n                alt={section.title + ' image'}\n              />\n            </Grid>\n          ) : (\n            ''\n          )}\n\n          {section.description !== undefined ? (\n            <p className={classes.sectionDescription}>{section.description}</p>\n          ) : (\n            'loading'\n          )}\n\n          {section.questions !== undefined ? (\n            <Grid\n              container\n              direction=\"column\"\n              alignItems=\"center\"\n              justify=\"space-evenly\"\n            >\n              {' '}\n              <br></br>\n              {section.questions.map((q, i) => (\n                <Grid\n                  item\n                  component={Question}\n                  question={q}\n                  local={this.state}\n                  changeHandler={this.handleInputChangeFor}\n                  key={i}\n                />\n              ))}\n            </Grid>\n          ) : (\n            'loading'\n          )}\n          <Grid className={classes.realmButtonContainer}>\n            <Button\n              className={classes.realmButton}\n              onClick={this.saveAndContinue}\n            >\n              Save & Continue\n            </Button>\n            <Button\n              className={classes.realmButton}\n              onClick={this.saveAndReturn}\n            >\n              Save & Exit\n            </Button>\n          </Grid>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  section: state.section,\n  realm: state.realm,\n});\n\nexport default withStyles(styles)(connect(mapStateToProps)(Section));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport styles from '../../themes/realmHomeTheme';\nimport { withStyles, Grid, Button } from '@material-ui/core';\n\nclass RealmFormIntro extends Component {\n  componentDidMount() {\n    this.props.dispatch({\n      type: 'FETCH_SECTION',\n      payload: {\n        sectionId: this.props.match.params.section,\n      },\n    });\n    this.props.dispatch({\n      type: 'FETCH_REALM',\n      payload: {\n        realmId: this.props.match.params.realm,\n      },\n    });\n  }\n\n  saveAndContinue = (event) => {\n    // Go to this realm's form\n    // /section/:realm/:section\n    this.props.history.push(\n      `/section/${this.props.match.params.realm}/${\n        this.props.realm !== undefined\n          ? this.props.realm.section[0].section_id\n          : ''\n      }`\n    );\n  };\n\n  goBack = () =>\n    this.props.history.push(`/realm-home/${this.props.match.params.realm}`);\n  start = () => {\n    // if they have no saved progress, create a place to save it.\n    if (this.props.state.progress.butts === undefined) {\n      this.props.dispatch({\n        type: 'CREATE_PROGRESS',\n        payload: {\n          realmId: this.props.match.params.realm,\n          sectionId: this.props.match.params.section,\n        },\n      });\n    }\n\n    this.props.history.push(\n      `/realm-form/${this.props.match.params.realm}/${this.props.match.params.section}`\n    );\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div>\n        <Grid\n          container\n          spacing={0}\n          alignItems=\"center\"\n          justify=\"center\"\n          direction=\"column\"\n        >\n          <Grid item xs={12} sm={12} md={6} lg={6}>\n            <h3 className={classes.realmTitle}>Realm Form Introduction</h3>\n            <div className={classes.formDescriptionContainer}>\n              <p className={classes.formDescription}>\n                Please fill out these preliminary questions regarding emotional\n                wellness before beginning the realm course.\n              </p>\n              <p className={classes.estimatedTimeOfCompletion}>\n                Estimated time:\n                <span className={classes.boldTOC}> 5-8 minutes</span>\n              </p>\n            </div>\n          </Grid>{' '}\n          <div className={classes.bottomNav}>\n            <Button className={classes.realmButton} onClick={this.start}>\n              Start Form\n            </Button>{' '}\n            <Button className={classes.realmButton} onClick={this.goBack}>\n              Back\n            </Button>\n          </div>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  state,\n});\n\n// this allows us to use <App /> in index.js\nexport default withStyles(styles)(connect(mapStateToProps)(RealmFormIntro));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles, TextField, FormControl } from '@material-ui/core';\nimport styles from '../../themes/realmHomeTheme';\n\nclass Question extends Component {\n  componentWillMount() {\n    // console.log(this.props.question);\n    this.setState({\n      answer: '',\n    });\n  }\n\n  handleInputChangeFor = (propertyName) => (event) => {\n    this.setState({\n      ...this.state,\n      [propertyName]: event.target.value,\n    });\n  };\n\n  render() {\n    // Deconstructing more props\n    const { classes, question } = this.props;\n\n    return (\n      <>\n        <FormControl className={classes.formContainer}>\n          <div className={classes.QandAContainer}>\n            <div className={classes.formQuestion}>{question.content}</div>\n\n            <TextField\n              className={classes.inputControl}\n              value={this.props.local[`answer${question.id}`]}\n              onChange={this.props.changeHandler(`answer${question.id}`)}\n              multiline\n            />\n          </div>\n        </FormControl>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n});\n\n// this allows us to use <App /> in index.js\nexport default withStyles(styles)(connect(mapStateToProps)(Question));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport styles from '../../themes/realmHomeTheme';\nimport { withStyles, Grid, Button } from '@material-ui/core';\nimport RealmQuestion from '../RealmQuestion/RealmQuestion';\n\nclass RealmForm extends Component {\n  state = {};\n\n  handleInputChangeFor = (propertyName) => (event) => {\n    this.setState({\n      ...this.state,\n      [propertyName]: event.target.value,\n    });\n  };\n\n  componentDidMount() {\n    this.props.dispatch({\n      type: 'FETCH_SECTION',\n      payload: {\n        sectionId: this.props.match.params.section,\n      },\n    });\n    this.props.dispatch({\n      type: 'FETCH_REALM',\n      payload: {\n        realmId: this.props.match.params.realm,\n      },\n    });\n  }\n\n  goBack = () => {\n    this.props.history.push(`/realm-home/${this.props.match.params.realm}`);\n  };\n\n  complete = () => {\n    this.props.dispatch({\n      type: 'SUBMIT_RESPONSE',\n      payload: {\n        state: this.state,\n        realmId: this.props.match.params.realm,\n        sectionId: this.props.match.params.section,\n      },\n    });\n\n    this.props.history.push(\n      `/realm-form-finished/${this.props.match.params.realm}/${this.props.match.params.section}`\n    );\n  };\n\n  render() {\n    // deconstructing props so I don't have to type `this.props.` all the time\n    const { classes, section, realm } = this.props;\n\n    return (\n      <div>\n        <Grid container spacing={0} alignItems=\"center\" justify=\"center\">\n          <Grid item xs={12} sm={12} md={6} lg={6}>\n            <h3 className={classes.realmTitle}>\n              {' '}\n              {realm.realm_name} Realm Form\n            </h3>\n\n            {section.questions !== undefined ? (\n              <Grid\n                container\n                direction=\"column\"\n                alignItems=\"center\"\n                justify=\"space-evenly\"\n              >\n                {section.questions.map((q, i) => (\n                  <Grid\n                    item\n                    component={RealmQuestion}\n                    question={q}\n                    local={this.state}\n                    changeHandler={this.handleInputChangeFor}\n                    key={i}\n                  />\n                ))}\n              </Grid>\n            ) : (\n              'loading'\n            )}\n\n            <div className={classes.realmButtonContainer}>\n              <Button className={classes.realmButton} onClick={this.complete}>\n                Submit\n              </Button>\n              <Button className={classes.realmButton} onClick={this.goBack}>\n                Return to Realm\n              </Button>\n            </div>\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  state,\n  realm: state.realm,\n  section: state.section,\n});\n\n// this allows us to use <App /> in index.js\nexport default withStyles(styles)(connect(mapStateToProps)(RealmForm));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport styles from '../../themes/realmHomeTheme';\nimport { withStyles, Grid, Button } from '@material-ui/core';\n\nclass RealmFormFinished extends Component {\n\n  componentDidMount() {\n    this.props.dispatch({\n      type: 'FETCH_SECTION',\n      payload: {\n        sectionId: this.props.match.params.section,\n      },\n    });\n    this.props.dispatch({\n      type: 'FETCH_REALM',\n      payload: {\n        realmId: this.props.match.params.realm,\n      },\n    })\n  }\n\n\n\n  // goBack = () => this.props.history.push(`/realm-home/${this.props.match.params.realm}`);\n  goBack = () => this.props.history.push(`/home`);\n  continue = () => {\n    this.props.dispatch({\n      type: 'FORM_FINISHED',\n      payload: {\n        realmId: this.props.match.params.realm,\n        sectionId: this.props.match.params.section,\n      },\n    })\n\n    const section_order = this.props.state.realm.section;\n    let next_section = -1;\n\n    // loop through the section order array\n    for (let i=0; i < section_order.length; i++) {\n      // if there is still a section after this one\n      if (section_order[i].section_id === parseInt(this.props.match.params.section) &&\n      (i + 1 < section_order.length) ) {\n        next_section = section_order[i+1].section_id;\n      }\n    }\n\n    if (next_section === -1) {\n      this.props.history.push(\n        `/realm-feedback/${this.props.match.params.realm}`);\n    } else {\n      this.props.history.push(\n        `/section/${this.props.match.params.realm}/${next_section}`);\n    }\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div>\n        <Grid\n          container\n          spacing={0}\n          alignItems=\"center\"\n          justify=\"center\"\n        >\n          <Grid\n            item\n            xs={12}\n            sm={12}\n            md={6}\n            lg={6}\n          >\n            <h3 className={classes.realmTitle}>Thank You!</h3>\n            <div className={classes.formDescriptionContainerThankYou}>\n              <p className={classes.formDescription}>\n                We appreciate your participation in filling out our realm form.\n                Your answers have been saved. Click continue to start the realm\n                course.\n              </p>\n            </div>\n          </Grid>{' '}\n          <div className={classes.bottomNav}>\n            <Button className={classes.realmButton} onClick={this.continue}>\n              Start Realm Course\n            </Button>{' '}\n            <Button className={classes.realmButton} onClick={this.goBack}>\n              Back to Realms\n            </Button>\n          </div>\n          {/*end container */}\n        </Grid>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  state,\n});\n\n// this allows us to use <App /> in index.js\nexport default withStyles(styles)(\n  connect(mapStateToProps)(RealmFormFinished)\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport styles from '../../themes/realmHomeTheme';\nimport {\n  withStyles,\n  Grid,\n  Button,\n  FormControl,\n  TextField,\n  RadioGroup,\n  FormControlLabel,\n  Radio,\n} from '@material-ui/core';\nimport SentimentVeryDissatisfiedIcon from '@material-ui/icons/SentimentVeryDissatisfied';\nimport SentimentDissatisfiedIcon from '@material-ui/icons/SentimentDissatisfied';\nimport SentimentSatisfiedIcon from '@material-ui/icons/SentimentSatisfied';\nimport SentimentSatisfiedAltIcon from '@material-ui/icons/SentimentSatisfiedAltOutlined';\nimport SentimentVerySatisfiedIcon from '@material-ui/icons/SentimentVerySatisfied';\nimport clsx from 'clsx';\n\nconst CssTextField = withStyles({\n  root: {\n    color: '#1f3556',\n    '& label.Mui-focused': {\n      color: '#1f3556',\n    },\n    '& label.Mui': { color: '#1f3556' },\n    '& .MuiInput-underline:after': {\n      borderBottom: '#1f3556 solid 2px',\n      color: '#1f3556',\n    },\n    '& .MuiInput-underline:before': {\n      borderBottom: '#1f3556 solid 1px',\n      color: '#1f3556',\n    },\n  },\n})(TextField);\n\nclass RealmFeedback extends Component {\n  state = {\n    feedbackScore: '3',\n    feedback: '',\n  };\n\n  componentDidMount() {\n    this.props.dispatch({\n      type: 'FETCH_REALM',\n      payload: {\n        realmId: this.props.match.params.realm,\n      },\n    });\n  }\n\n  handleRadioChange = (event) => {\n    this.setState({\n      ...this.state,\n      feedbackScore: event.target.value,\n    });\n  };\n\n  handleFeedbackChange = (event) => {\n    this.setState({\n      ...this.state,\n      feedback: event.target.value,\n    });\n  };\n\n  saveAndReturn = () => {\n    this.props.dispatch({\n      type: 'SUBMIT_FEEDBACK',\n      payload: {\n        state: this.state,\n        realmId: this.props.match.params.realm,\n      },\n    });\n\n    this.props.history.push('/home');\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div>\n        <Grid container spacing={0} alignItems=\"center\" justify=\"center\">\n          <Grid item xs={12} sm={12} md={6} lg={6}>\n            <div>\n              {this.props.state.realm.realm_name !== undefined ? (\n                <Grid item>\n                  <h3 className={classes.realmTitle}>\n                    Realm of {this.props.state.realm.realm_name} Wellness\n                  </h3>\n                </Grid>\n              ) : (\n                ''\n              )}\n              <h3 className={classes.sectionTitle}>\n                Feedback\n                <span className={classes.sectionOrder}> </span>\n              </h3>\n\n              <br></br>\n            </div>\n            <FormControl\n              className={classes.formContainerSection}\n              component=\"fieldset\"\n            >\n              <div className={classes.QandAContainerSection}>\n                <div className={classes.sectionQuestion}>\n                  How did you feel about the course?\n                </div>\n\n                <div className={classes.radioContainer}>\n                  <RadioGroup\n                    aria-label=\"Feedback\"\n                    name=\"Feedback\"\n                    value={this.state.feedbackScore}\n                    defaultValue={this.state.feedbackScore}\n                    onChange={this.handleRadioChange}\n                    row\n                    className={classes.sectionRadio}\n                  >\n                    <FormControlLabel\n                      labelPlacement=\"top\"\n                      value=\"1\"\n                      control={\n                        <Radio\n                          checkedIcon={\n                            <span\n                              className={clsx(\n                                classes.icon,\n                                classes.checkedIcon\n                              )}\n                            />\n                          }\n                          icon={<span className={classes.icon} />}\n                        />\n                      }\n                      label={\n                        <span className={classes.sectionRadioButtonLabel}>\n                          <SentimentVeryDissatisfiedIcon\n                            className={classes.ratingIcon}\n                          />\n                        </span>\n                      }\n                      className={classes.sectionRadioButtonLabel}\n                    />\n                    <FormControlLabel\n                      value=\"2\"\n                      labelPlacement=\"top\"\n                      control={\n                        <Radio\n                          checkedIcon={\n                            <span\n                              className={clsx(\n                                classes.icon,\n                                classes.checkedIcon\n                              )}\n                            />\n                          }\n                          icon={<span className={classes.icon} />}\n                        />\n                      }\n                      label={\n                        <span className={classes.sectionRadioButtonLabel}>\n                          <SentimentDissatisfiedIcon\n                            className={classes.ratingIcon}\n                          />\n                        </span>\n                      }\n                      className={classes.sectionRadioButtonLabel}\n                    />\n                    <FormControlLabel\n                      labelPlacement=\"top\"\n                      value=\"3\"\n                      control={\n                        <Radio\n                          checkedIcon={\n                            <span\n                              className={clsx(\n                                classes.icon,\n                                classes.checkedIcon\n                              )}\n                            />\n                          }\n                          icon={<span className={classes.icon} />}\n                        />\n                      }\n                      label={\n                        <span className={classes.sectionRadioButtonLabel}>\n                          <SentimentSatisfiedIcon\n                            className={classes.ratingIcon}\n                          />\n                        </span>\n                      }\n                      className={classes.sectionRadioButtonLabel}\n                    />\n                    <FormControlLabel\n                      labelPlacement=\"top\"\n                      value=\"4\"\n                      control={\n                        <Radio\n                          checkedIcon={\n                            <span\n                              className={clsx(\n                                classes.icon,\n                                classes.checkedIcon\n                              )}\n                            />\n                          }\n                          icon={<span className={classes.icon} />}\n                        />\n                      }\n                      label={\n                        <span className={classes.sectionRadioButtonLabel}>\n                          <SentimentSatisfiedAltIcon\n                            className={classes.ratingIcon}\n                          />\n                        </span>\n                      }\n                      className={classes.sectionRadioButtonLabel}\n                    />\n                    <FormControlLabel\n                      labelPlacement=\"top\"\n                      value=\"5\"\n                      control={\n                        <Radio\n                          checkedIcon={\n                            <span\n                              className={clsx(\n                                classes.icon,\n                                classes.checkedIcon\n                              )}\n                            />\n                          }\n                          icon={<span className={classes.icon} />}\n                        />\n                      }\n                      label={\n                        <span className={classes.sectionRadioButtonLabel}>\n                          <SentimentVerySatisfiedIcon\n                            className={classes.ratingIcon}\n                          />\n                        </span>\n                      }\n                      className={classes.sectionRadioButtonLabel}\n                    />\n                  </RadioGroup>\n\n                  <CssTextField\n                    className={classes.inputControl}\n                    label=\"Feedback\"\n                    multiline\n                    value={this.state.feedback}\n                    onChange={this.handleFeedbackChange}\n                  />\n                </div>\n                <br></br>\n                <br></br>\n                <br></br>\n                <div className={classes.realmButtonContainer}>\n                  <Button\n                    className={classes.realmButton}\n                    onClick={this.saveAndReturn}\n                  >\n                    Save & Complete Realm\n                  </Button>\n                </div>\n              </div>\n            </FormControl>\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  state,\n});\n\n// this allows us to use <App /> in index.js\nexport default withStyles(styles)(connect(mapStateToProps)(RealmFeedback));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport styles from '../../themes/realmHomeTheme';\nimport { withStyles, Grid, Button, Typography } from '@material-ui/core';\n\nclass RealmHome extends Component {\n  componentDidMount() {\n    this.props.dispatch({\n      type: 'FETCH_REALM',\n      payload: {\n        realmId: this.props.match.params.realm,\n      },\n    });\n    this.props.dispatch({\n      type: 'FETCH_PROGRESS',\n      payload: {\n        realmId: this.props.match.params.realm,\n      },\n    });\n  }\n\n  goContinue = (event) => {\n    // console.log(this.props.state);\n    // Use the user's progress to determine where to send them\n    // If the user has progress saved use it\n    if (this.props.progress.realm_id !== undefined) {\n      // If the user's hasn't started the realm yet, go to the form page\n      if (!this.props.progress.started)\n        this.props.history.push(\n          `/realm-form/${this.props.match.params.realm}/${this.props.realm.section[0].section_id}`\n        );\n      // Otherwise go to the last page the user was on.\n      else {\n        this.props.history.push(\n          `/section/${this.props.match.params.realm}/${this.props.progress.section_id}`\n        );\n      }\n    } else {\n      // Otherwise go to this realm's form\n      // /section/:realm/:section\n      this.props.history.push(\n        `/realm-form-intro/${this.props.match.params.realm}/${\n          this.props.realm !== undefined\n            ? this.props.realm.section[0].section_id\n            : ''\n        }`\n      );\n    }\n  };\n\n  goBack = () => this.props.history.push('/home');\n\n  render() {\n    const { classes, realm } = this.props;\n\n    return (\n      <Grid container spacing={0} alignItems=\"center\" justify=\"center\">\n        <Grid\n          container\n          item\n          direction=\"column\"\n          alignItems=\"center\"\n          justify=\"center\"\n          xs={12}\n          sm={12}\n          md={6}\n          lg={6}\n        >\n\n          {realm.realm_name !== undefined ? (\n            <Grid item>\n              <Typography\n                variant=\"h3\"\n                className={classes.realmTitle}\n                gutterBottom\n              >\n                Realm of {realm.realm_name} Wellness\n              </Typography>\n            </Grid>\n          ) : (\n            ''\n          )}\n\n          {realm.cover_photo !== undefined ? (\n            <Grid item className={classes.realmCoverContainer}>\n              <img\n                className={classes.realmCover}\n                src={realm.cover_photo}\n                alt={realm.realm_name + ' realm logo'}\n              />\n            </Grid>\n          ) : (\n            ''\n          )}\n\n          {realm.description !== undefined ? (\n            <Grid item>\n              <br></br>\n              <Typography className={classes.realmDescription}>\n                {realm.description}\n              </Typography>\n            </Grid>\n          ) : (\n            'loading'\n          )}\n\n          <Grid className={classes.realmButtonContainer}>\n            {realm !== undefined ? (\n              <Button className={classes.realmButton} onClick={this.goContinue}>\n                Continue\n              </Button>\n            ) : (\n              ''\n            )}\n\n            <Button className={classes.realmButton} onClick={this.goBack}>\n              Go Back\n            </Button>\n          </Grid>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  realm: state.realm,\n  user: state.user,\n  progress: state.progress,\n  state,\n});\n\n// this allows us to use <App /> in index.js\nexport default withStyles(styles)(connect(mapStateToProps)(RealmHome));\n","import React, { Component } from 'react';\nimport {\n  HashRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from 'react-router-dom';\n\nimport { connect } from 'react-redux';\n\nimport Nav from '../Nav/Nav';\n\nimport ProtectedRoute from '../ProtectedRoute/ProtectedRoute';\nimport AdminRoute from '../AdminRoute/AdminRoute';\nimport ScrollToTop from '../ScrollToTop/ScrollToTop';\n\nimport StatisticsPage from '../Admin/pages/StatisticsPage/StatisticsPage';\nimport HomeMobile from '../HomeMobile/HomeMobile';\nimport ViewSectionsPage from '../Admin/pages/ViewSectionsPage/ViewSectionsPage';\nimport AddNewSectionPage from '../Admin/pages/AddNewSectionPage/AddNewSectionPage.js';\nimport PreviewSectionPage from '../Admin/pages/PreviewSectionPage/PreviewSectionPage';\nimport PreviewRealmPage from '../Admin/pages/PreviewRealmPage/PreviewRealmPage';\nimport ViewRealmsPage from '../Admin/pages/ViewRealmsPage/ViewRealmsPage';\nimport AddNewRealmPage from '../Admin/pages/AddNewRealmPage/AddNewRealmPage';\n// Client management features were scraped due to time constraints.\n// import ViewClientsPage from '../Admin/pages/ViewClientsPage/ViewClientsPage';\n// import AddNewClientPage from '../Admin/pages/AddNewClientPage/AddNewClientPage';\n// import EditClientPage from '../Admin/pages/EditClientPage/EditClientPage';\nimport AddSectionsToNewRealm from '../Admin/pages/AddSectionsToNewRealmPage/AddSectionsToNewRealmPage';\nimport Section from '../Section/Section';\nimport RealmFormIntro from '../RealmFormIntro/RealmFormIntro';\nimport RealmForm from '../RealmForm/RealmForm';\nimport RealmFormFinished from '../RealmFormFinished/RealmFormFinished';\nimport RealmFeedback from '../RealmFeedback/RealmFeedback';\nimport RealmHome from '../RealmHome/RealmHome';\nimport './App.css';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.dispatch({ type: 'FETCH_USER' });\n  }\n\n  render() {\n    return (\n      <Router>\n        <ScrollToTop />\n        <div>\n          {this.props.user.id ? <Nav /> : <span />}\n          {/* <Nav /> */}\n          <Switch>\n            {/* Visiting localhost:3000 will redirect to localhost:3000/home */}\n            <Redirect exact from=\"/\" to=\"/home\" />\n            {/* <Redirect\n              exact\n              from=\"home\"\n              to={\n                this.props.user.id && this.props.user.admin\n                  ? '/admin-landing'\n                  : '/home'\n              }\n            /> */}\n\n            {/* AdminRoutes test to see if the user is a admin before displaying the page */}\n            <AdminRoute\n              exact\n              path=\"/add-section\"\n              component={AddNewSectionPage}\n            />\n            <AdminRoute exact path=\"/add-realm\" component={AddNewRealmPage} />\n            <AdminRoute\n              exact\n              path=\"/add-sections-to-realm\"\n              component={AddSectionsToNewRealm}\n            />\n            <AdminRoute exact path=\"/statistics\" component={StatisticsPage} />\n            <AdminRoute\n              exact\n              path=\"/preview/realm/:id\"\n              component={PreviewRealmPage}\n            />\n            <AdminRoute\n              exact\n              path=\"/preview/section/:id\"\n              component={PreviewSectionPage}\n            />\n            <AdminRoute exact path=\"/view-realms\" component={ViewRealmsPage} />\n            <AdminRoute\n              exact\n              path=\"/view-sections\"\n              component={ViewSectionsPage}\n            />\n            {/* These routes were scraped, due to time constraints.\n                <AdminRoute exact path=\"/add-client\" component={AddNewClientPage} />\n                <AdminRoute exact path=\"/view-clients\" component={ViewClientsPage} />\n                <AdminRoute exact path=\"/edit-client\" component={EditClientPage} /> */}\n\n            <ProtectedRoute\n              exact\n              path=\"/realm-home/:realm\"\n              component={RealmHome}\n            />\n            <ProtectedRoute\n              exact\n              path=\"/section/:realm/:section\"\n              component={Section}\n            />\n\n            {/* For protected routes, the view could show one of several things on the same route.\n            Visiting localhost:3000/home will show the UserPage if the user is logged in.\n            If the user is not logged in, the ProtectedRoute will show the 'Login' or 'Register' page.\n            Even though it seems like they are different pages, the user is always on localhost:3000/home */}\n            <ProtectedRoute exact path=\"/home\" component={HomeMobile} />\n\n            <ProtectedRoute\n              exact\n              path=\"/realm-feedback/:realm\"\n              component={RealmFeedback}\n            />\n\n            <ProtectedRoute\n              exact\n              path=\"/realm-form-intro/:realm/:section\"\n              component={RealmFormIntro}\n            />\n            <ProtectedRoute\n              exact\n              path=\"/realm-form/:realm/:section\"\n              component={RealmForm}\n            />\n            <ProtectedRoute\n              exact\n              path=\"/realm-form-finished/:realm/:section\"\n              component={RealmFormFinished}\n            />\n            {/* If none of the other routes matched, we will show a 404. */}\n            <Route render={() => <h1>404</h1>} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n});\n\nexport default connect(mapStateToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport logger from 'redux-logger';\n\nimport rootReducer from './redux/reducers'; // imports ./redux/reducers/index.js\nimport rootSaga from './redux/sagas'; // imports ./redux/sagas/index.js\n\nimport App from './components/App/App';\n\nconst sagaMiddleware = createSagaMiddleware();\n\n// this line creates an array of all of redux middleware you want to use\n// we don't want a whole ton of console logs in our production code\n// logger will only be added to your project if your in development mode\nconst middlewareList = process.env.NODE_ENV === 'development' ?\n  [sagaMiddleware, logger] :\n  [sagaMiddleware];\n\nconst store = createStore(\n  // tells the saga middleware to use the rootReducer\n  // rootSaga contains all of our other reducers\n  rootReducer,\n  // adds all middleware to our project including saga and logger\n  applyMiddleware(...middlewareList),\n);\n\n// tells the saga middleware to use the rootSaga\n// rootSaga contains all of our other sagas\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('react-root'),\n);\n"],"sourceRoot":""}